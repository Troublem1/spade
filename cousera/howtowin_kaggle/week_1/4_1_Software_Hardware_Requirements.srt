1
00:00:04.460 --> 00:00:05.670
ねえ皆さん。

2
00:00:05.670 --> 00:00:10.490
このビデオでは、ハードウェアとソフトウェ
アの要件の概要を説明します。

3
00:00:10.490 --> 00:00:14.520
あなたは、データ科学大会のための典型的な
ものであるかを知ることができます。

4
00:00:14.520 --> 00:00:17.900
ハードウェア関連のものから始めたいと思っ
ています。

5
00:00:17.900 --> 00:00:19.399
大会に参加し、

6
00:00:19.399 --> 00:00:22.890
一般的に、多くの計算リソースは必要ありま
せん。

7
00:00:22.890 --> 00:00:23.890
大会の多くは、

8
00:00:23.890 --> 00:00:28.650
イメージベースの場合を除き、数ギガバイト
のデータを持っています。

9
00:00:28.650 --> 00:00:33.350
それは非常に巨大ではないと16ギガバイト
の ram と高レベルのラップトップ上で
処理することができます

10
00:00:33.350 --> 00:00:34.500
4つの物理コアがあります。

11
00:00:35.600 --> 00:00:39.480
かなり良いセットアップは、32ギガバイト
の ram を搭載したタワー PC
であり、

12
00:00:39.480 --> 00:00:42.570
6つの物理コア、これは私が個人的に使用す
るものです。

13
00:00:43.630 --> 00:00:45.660
使用するハードウェアを選択できます。

14
00:00:45.660 --> 00:00:48.910
私はあなたが次のことに注意を払うことをお
勧めします。

15
00:00:48.910 --> 00:00:52.190
最初の RAM は、このより良いです。

16
00:00:52.190 --> 00:00:56.150
あなたのデータを記憶に保つことができれば
、あなたの人生は、はるかに簡単になります
。

17
00:00:56.150 --> 00:00:59.600
個人的に、私が見つかりました64ギガバイ
トはかなり十分ですが、

18
00:00:59.600 --> 00:01:03.569
一部のプログラマは128ギガバイトまたは
さらに多くを好む。

19
00:01:04.618 --> 00:01:10.020
次のコアは、より多くのまたはより高速な実
験を行うことができますがコアです。

20
00:01:10.020 --> 00:01:12.910
私はそれが固定コアで動作するように快適に
見つけるが、

21
00:01:12.910 --> 00:01:14.990
時には32でも十分ではありません。

22
00:01:16.270 --> 00:01:19.910
次のことに注意を払うためのストレージです
。

23
00:01:19.910 --> 00:01:23.570
メモリに収まらない大きなデータセットを操
作する場合は、

24
00:01:23.570 --> 00:01:27.530
データのチャンクを読み書きするには、高速
ディスクを作成することが重要です。

25
00:01:27.530 --> 00:01:32.070
SSD は、画像の狭さや多数を訓練する場
合は特に重要です。

26
00:01:33.270 --> 00:01:35.660
場合には本当に計算リソースが必要です。

27
00:01:35.660 --> 00:01:38.640
たとえば、チームの一員または

28
00:01:38.640 --> 00:01:43.260
計算重いアプローチを持って、あなたはクラ
ウドプラットフォーム上で借りることができ
ます。

29
00:01:43.260 --> 00:01:47.530
彼らは、ram、コア、および gpu
の多くのマシンを提供しています。

30
00:01:47.530 --> 00:01:49.150
いくつかのクラウドプロバイダーがあり、

31
00:01:49.150 --> 00:01:54.520
最も有名なのは Amazon
AWS、マイクロソフトの
Azure、および Google
クラウドです。

32
00:01:54.520 --> 00:01:56.335
それぞれに独自の価格設定があるので、

33
00:01:56.335 --> 00:01:59.840
私達は1つがあなたの必要性および予算に最
も適した選ぶことができる。

34
00:01:59.840 --> 00:02:04.150
私は特に、AWS
スポットオプションに注意を喚起したい。

35
00:02:04.150 --> 00:02:07.800
インスタンスを使用できるようにするには、
スポットインスタンス

36
00:02:07.800 --> 00:02:09.400
あなたのコストを大幅に下げることができま
す。

37
00:02:09.400 --> 00:02:13.590
スポットインスタンスの価格が高いほど
Amazon によって設定され、

38
00:02:13.590 --> 00:02:18.090
スポットインスタンスの需給によって変動し
ます。

39
00:02:18.090 --> 00:02:22.630
入札単価が現在の市場価格を超えた場合、ス
ポットインスタンスが実行されます。

40
00:02:22.630 --> 00:02:25.450
一般的に、それは他のオプションよりもはる
かに安いです。

41
00:02:25.450 --> 00:02:29.640
しかし、あなたは常にリスクをあなたの入札
は、現在の市場価格の下で取得されますが、

42
00:02:29.640 --> 00:02:30.820
ソースは終了します。

43
00:02:31.840 --> 00:02:33.450
セットアップ方法についてのチュートリアル
と

44
00:02:33.450 --> 00:02:36.500
追加の資料にあるクラウドリソースを構成し
ます。

45
00:02:37.500 --> 00:02:39.948
私が議論したいもう一つの重要なことは、ソ
フトウェアです。

46
00:02:39.948 --> 00:02:44.260
通常、大会のルールは、商用ソフトウェアを
使用することを禁止し、

47
00:02:44.260 --> 00:02:47.910
それは結果を再現するためにライセンスを購
入する必要があるため。

48
00:02:47.910 --> 00:02:50.770
一部の競合他社は、基本言語として R
を好む。

49
00:02:50.770 --> 00:02:53.960
しかし、我々は、より一般的な、より一般的
な Python の技術を説明します。

50
00:02:55.290 --> 00:02:58.310
Python は、高速プロトタイピングの
ための非常に良い言語です。

51
00:02:58.310 --> 00:03:02.090
それは、高品質とオープンソースのライブラ
リの膨大な量を持っています。

52
00:03:02.090 --> 00:03:03.850
そして、私はそれらのいくつかを再利用した
い。

53
00:03:05.060 --> 00:03:07.430
NumPy から始めましょう。

54
00:03:07.430 --> 00:03:11.210
次元配列を操作するための線形代数ライブラ
リで、

55
00:03:11.210 --> 00:03:15.380
これは有用な線形代数ルーチンと乱数機能が
含まれています。

56
00:03:16.550 --> 00:03:20.660
パンダは、高速で柔軟な、表現力のある方法
を提供するライブラリです。

57
00:03:20.660 --> 00:03:24.520
リレーショナルまたはデータのテーブル、簡
単かつ直感的な両方。

58
00:03:24.520 --> 00:03:27.585
これにより、SQL と同様の方法でデータ
を処理することができます。

59
00:03:27.585 --> 00:03:32.190
Scikit-学ぶ古典的な機械学習アルゴ
リズムのライブラリです。

60
00:03:32.190 --> 00:03:36.320
これは、さまざまな分類、回帰、およびクラ
スタリングアルゴリズムを備えています

61
00:03:36.320 --> 00:03:40.750
サポート仮想マシン、ランダムフォース、お
よび多くを含む。

62
00:03:41.950 --> 00:03:44.030
Matplotlib
は、プロットライブラリです。

63
00:03:44.030 --> 00:03:47.070
それは、視覚化の様々なことを行うことがで
きます

64
00:03:47.070 --> 00:03:50.980
ラインプロット、ヒストグラム、散布図と多
くのように。

65
00:03:52.050 --> 00:03:56.460
IDE として、私はあなたが
Jupyter ノードボックスで
IPython を使用することをお勧め、

66
00:03:56.460 --> 00:04:00.190
彼らはあなたが対話的に、リモートで動作す
ることができますので。

67
00:04:00.190 --> 00:04:03.390
最後のプロパティは、クラウドリソースを使
用する場合に特に便利です。

68
00:04:04.490 --> 00:04:08.380
追加パッケージには、より具体的なツールの
実装が含まれます。

69
00:04:08.380 --> 00:04:11.685
通常、単一のパッケージは単一のアルゴリズ
ムを実装します。

70
00:04:11.685 --> 00:04:15.900
XGBoost と LightGBM パ
ッケージがグラデーションブーストデシジョ
ンツリーを実装

71
00:04:15.900 --> 00:04:18.320
非常に効率的かつ最適化された方法で。

72
00:04:18.320 --> 00:04:20.230
あなたは間違いなくそのようなツールについ
て知っておくべき.

73
00:04:21.370 --> 00:04:25.100
Keras は、ニューラルネットのための
ユーザーフレンドリーなフレームワークです
。

74
00:04:25.100 --> 00:04:28.000
この新しいパッケージは、この新しい]
プロジェクションの効率的な実装です。

75
00:04:28.000 --> 00:04:29.990
我々は、我々のコースで議論する方法。

76
00:04:31.050 --> 00:04:34.890
また、私は通常持っていない外部ツールにつ
いていくつかの単語を言いたい

77
00:04:34.890 --> 00:04:38.670
すべての接続にもかかわらず、まだ非常に計
算に使用されます。

78
00:04:38.670 --> 00:04:41.120
そのようなツールの1つは、Vowpal
Wabbit です。

79
00:04:41.120 --> 00:04:44.020
それは燃える速度を提供するように設計され
ているツールであり、

80
00:04:44.020 --> 00:04:48.060
メモリに収まらない大規模なデータセットを
処理します。

81
00:04:48.060 --> 00:04:52.860
Libfm と libffm は、さまざ
まなタイプの最適化マシンを実装し、

82
00:04:52.860 --> 00:04:57.810
クリックスルーレート予測などのスパースデ
ータによく使用されます。

83
00:04:57.810 --> 00:05:02.910
Rgf は、私はあなたがアンサンブルで使
用することをお勧め代替ベースのメソッドで
す。

84
00:05:02.910 --> 00:05:05.220
これらのパッケージは1つずつインストール
できます。

85
00:05:05.220 --> 00:05:07.250
しかし、代替として、あなたはバイトを使用
することができます

86
00:05:07.250 --> 00:05:11.230
既に述べられたパッケージの多くを含んでい
るアナコンダのような配分。

87
00:05:12.260 --> 00:05:13.927
そして、このビデオを通じて、

88
00:05:13.927 --> 00:05:17.953
私は、提案されたセットアップを強調したい
最も一般的ですが、1つだけではありません
。

89
00:05:17.953 --> 00:05:22.799
彼らは単なるツールなので、ハードウェアと
ソフトウェアの役割を過大評価しないでくだ
さい。

90
00:05:22.799 --> 00:05:24.964
ご注意をありがとうございました。

91
00:05:24.964 --> 00:05:34.964
音楽

