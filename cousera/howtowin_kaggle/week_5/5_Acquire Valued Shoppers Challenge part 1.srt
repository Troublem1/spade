1
00:00:00.160 --> 00:00:05.470
みなさん。今日、私はあなたに説明する方法
を、

2
00:00:05.470 --> 00:00:07.830
私と私のチームメイトゲルト、

3
00:00:07.830 --> 00:00:15.565
我々は、獲得した価値のある買い物客の挑戦
と呼ばれる非常に特別な Kaggle
競争に勝った。

4
00:00:15.565 --> 00:00:20.320
最初に私に競争についてのある背景を与える
ことを許可しなさい。

5
00:00:20.320 --> 00:00:22.820
レコメンの挑戦だった。

6
00:00:22.820 --> 00:00:25.485
そして、レコメンダーの挑戦と言うと、

7
00:00:25.485 --> 00:00:31.020
私はあなたが製品のリストと顧客のリストを
持っていることを意味し、

8
00:00:31.020 --> 00:00:32.820
そして、あなたはそれらを一緒に持ってみて
ください。

9
00:00:32.820 --> 00:00:35.260
だから我々はお勧めので、それらをターゲッ
ト

10
00:00:35.260 --> 00:00:40.390
どの顧客のために販売の忠誠または何か他の
ものを高めるため。

11
00:00:40.390 --> 00:00:45.040
約1000チームがあったし、当時のために
、

12
00:00:45.040 --> 00:00:47.425
少なくとも彼らはかなり多かった。

13
00:00:47.425 --> 00:00:49.675
今 Kaggle
ははるかに人気となっている。

14
00:00:49.675 --> 00:00:52.110
しかし、当時は、データのサイズを考えると
、

15
00:00:52.110 --> 00:00:53.350
かなり大きかった

16
00:00:53.350 --> 00:00:57.080
私はこの競争は多くの注目を集めたと思う。

17
00:00:57.080 --> 00:01:01.725
そして、私が言ったように、我々はチームメ
イトのゲルトで最初の場所を達成

18
00:01:01.725 --> 00:01:03.810
それが何だったのか、と思うと、

19
00:01:03.810 --> 00:01:08.910
我々は競争の初期のリードを取ったので、非
常に明確な勝利、

20
00:01:08.910 --> 00:01:10.615
そして、我々はそれを維持した。

21
00:01:10.615 --> 00:01:17.480
そして、その解決策は、実際には非常に機械
学習ケッビ州ではなかった

22
00:01:17.480 --> 00:01:22.020
しかし、それは本当に理解しようとして焦点
を当てていた

23
00:01:22.020 --> 00:01:26.755
問題はよく、適切に検証する方法を見つける
。

24
00:01:26.755 --> 00:01:30.315
そして、一般的に、それは非常に、

25
00:01:30.315 --> 00:01:35.510
非常に賢明な結果を得ることに焦点を当てた
。

26
00:01:35.510 --> 00:01:41.105
だからこそ、自分のしたことを説明するのは
本当に貴重だと思います。

27
00:01:41.105 --> 00:01:45.230
では、実際に解決しようとした問題は何でし
たか?

28
00:01:45.230 --> 00:01:50.985
あなたはほぼ均等に分割、31万の買い物客
を持って想像してください。

29
00:01:50.985 --> 00:01:53.090
私は電車でテストしています。

30
00:01:53.090 --> 00:02:02.330
あなたは、彼らが申し出を与えられた点から
すべての彼らの取引を持っています、

31
00:02:02.330 --> 00:02:05.425
そして、これらは約3億5000万のトラン
ザクションだった。

32
00:02:05.425 --> 00:02:12.310
したがって、この課題に関与するすべての顧
客のすべてのトランザクションの1年間、

33
00:02:12.310 --> 00:02:15.245
そして、あなたは37の異なるオファーを持
っている。

34
00:02:15.245 --> 00:02:17.140
ここで申し出ると言うと、

35
00:02:17.140 --> 00:02:18.780
実際にクーポンです。

36
00:02:18.780 --> 00:02:22.035
なので、買い物客は普通に送っています。

37
00:02:22.035 --> 00:02:25.045
と言う紙切れ一枚ですが、

38
00:02:25.045 --> 00:02:26.620
「この商品を買ったら、

39
00:02:26.620 --> 00:02:27.865
値引きしてもらえますよ」

40
00:02:27.865 --> 00:02:29.920
だから、特定の項目をお勧めします。

41
00:02:29.920 --> 00:02:32.975
今、我々は正確に割引が何であるかを知らな
い。

42
00:02:32.975 --> 00:02:34.860
多分割引、多分それは言う、

43
00:02:34.860 --> 00:02:36.595
「別の商品をタダで買えばいい」

44
00:02:36.595 --> 00:02:38.460
だから、多分別のプロモーション、

45
00:02:38.460 --> 00:02:45.330
しかし、原則として、このアイテムを購入す
るためのインセンティブのいくつかの並べ替
えです。

46
00:02:45.330 --> 00:02:51.130
私はこれまでの項目または製品を言及してい
る

47
00:02:51.130 --> 00:02:56.495
しかし、製品の概念は、実際にこの課題に存
在していなかった

48
00:02:56.495 --> 00:02:58.610
でも推測できる

49
00:02:58.610 --> 00:03:03.775
我々は、ブランドのユニークな組み合わせ、
カテゴリ、と言うことができる

50
00:03:03.775 --> 00:03:08.485
そして、存在していた会社は、製品を形成す
ることができる

51
00:03:08.485 --> 00:03:12.325
少なくともこの競争のために。

52
00:03:12.325 --> 00:03:18.230
私はあなたに私たちが解決しようとしている
実際の問題についてのもう少し詳細を与える
ことができます。

53
00:03:18.230 --> 00:03:20.245
タイムラインがあると想像して

54
00:03:20.245 --> 00:03:25.360
過去1年から1年後までのスタート。

55
00:03:25.360 --> 00:03:30.245
なので、以前、お客さんがお店を訪問させて
、

56
00:03:30.245 --> 00:03:33.205
特定のアイテム、葉、購入

57
00:03:33.205 --> 00:03:34.650
別の日に戻ってくる、

58
00:03:34.650 --> 00:03:37.085
別の訪問を行い、より多くのアイテムを購入
する。

59
00:03:37.085 --> 00:03:38.625
それからある時点で、

60
00:03:38.625 --> 00:03:41.910
彼または彼女は、オファーをターゲットにさ
れている

61
00:03:41.910 --> 00:03:44.360
私が言ったようにクーポン。

62
00:03:44.360 --> 00:03:49.510
この顧客のすべてのトランザクション履歴が
停止します。

63
00:03:49.510 --> 00:03:51.210
あなたは他に何も知らない

64
00:03:51.210 --> 00:03:54.550
この時点まで、

65
00:03:54.550 --> 00:03:58.295
1年間何でも知ってるでしょ

66
00:03:58.295 --> 00:04:01.535
あなたが知っている唯一のことは、

67
00:04:01.535 --> 00:04:05.440
あなたは、顧客が実際にそのクーポンを償還
している知っている。

68
00:04:05.440 --> 00:04:08.065
だから彼は、オファーの製品を購入した。

69
00:04:08.065 --> 00:04:10.900
そして、その訓練データのためだけに、

70
00:04:10.900 --> 00:04:16.985
また、彼または彼女は再びそのアイテムを買
ったかどうかを指示する特別なフラグがあり
ます。

71
00:04:16.985 --> 00:04:19.640
そして、あなたはこれが貴重である理由を見
ることができます。

72
00:04:19.640 --> 00:04:23.875
だって普通、クーポンで誰かをターゲットに
したら、

73
00:04:23.875 --> 00:04:25.335
あなたは、割引を与える

74
00:04:25.335 --> 00:04:28.090
そして、あなたは、実際にそれほど利益を作
らない

75
00:04:28.090 --> 00:04:34.155
しかし、あなたは、顧客との長期的な関係を
確立することを目指しています。

76
00:04:34.155 --> 00:04:38.550
そして、それは彼らが本当にモデルを得るこ
とに興味を持っていた理由です

77
00:04:38.550 --> 00:04:42.485
ここでは、どの勧告を予測することが

78
00:04:42.485 --> 00:04:44.360
どの提供がその効果をもたらすか、

79
00:04:44.360 --> 00:04:49.235
顧客は、このアイテムを購入する習慣を開発
することになります。

80
00:04:49.235 --> 00:04:53.030
我々が試されていたのは AUC だ

81
00:04:53.030 --> 00:04:59.635
この時点で、私はあなたがどのような
AUC は、メトリックとして知っているこ
とを期待するが、原則として、

82
00:04:59.635 --> 00:05:04.800
あなたはどれだけあなたのスコア差別に興味
を持っている

83
00:05:04.800 --> 00:05:11.835
それらの間に購入したり、再びアイテムを購
入することができますし、それらはありませ
ん。

84
00:05:11.835 --> 00:05:14.365
だから、あなたが最高のスコアを持っている
ときに、

85
00:05:14.365 --> 00:05:16.725
あなたは、アイテムを購入するより高いチャ
ンスを期待する

86
00:05:16.725 --> 00:05:18.110
そして、より低いスコア、

87
00:05:18.110 --> 00:05:20.410
アイテムを再度購入することを試みます。

88
00:05:20.410 --> 00:05:26.950
従って、より高い AUC はこの差別があ
なたのスコアとより強いことを意味する。

89
00:05:26.950 --> 00:05:31.375
これはチャレンジングな挑戦だった。

90
00:05:31.375 --> 00:05:34.750
そして、それは挑戦的だったので、

91
00:05:34.750 --> 00:05:37.630
まず、データセットはかなり大きかったです
。

92
00:05:37.630 --> 00:05:41.385
私が言ったように、3億5000万トランザ
クション。

93
00:05:41.385 --> 00:05:44.315
私とゲルト、我々は当時、クレイジーリソー
スを持っていなかった。

94
00:05:44.315 --> 00:05:48.700
私は個人的にそれ以来、私のハードウェアを
改善していることを認めなければならない

95
00:05:48.700 --> 00:05:50.220
しかし、実際に当時、

96
00:05:50.220 --> 00:05:56.520
私は32ビットの Windows と
RAM のわずか4ギガバイトを持っていた
ノートパソコンで働いていた。

97
00:05:56.520 --> 00:06:02.150
だから、本当に小さく、主に我々はこれらの
クライアントファイルに対処しなければなら
なかった挑戦。

98
00:06:02.150 --> 00:06:04.330
その後、我々は機能を持っていなかった。

99
00:06:04.330 --> 00:06:10.800
そのためには、この顧客は、このオファーを
与えられた知っている

100
00:06:10.800 --> 00:06:16.470
これは私が前に述べたこれらの3つの要素に
よって一貫している, カテゴリー,
ブランド,

101
00:06:16.470 --> 00:06:24.655
と会社、そしてこの勧告は何もなされた時間
。

102
00:06:24.655 --> 00:06:31.680
次に、トランザクション履歴に移動して、フ
ィーチャを生成する必要がありました。

103
00:06:31.680 --> 00:06:35.340
そして、あなたが知っている、誰もが彼らが
望んで本当に何でも作成できます。

104
00:06:35.340 --> 00:06:41.235
どの機能が最適に動作するかについて明確な
答えはありませんでした。

105
00:06:41.235 --> 00:06:46.570
だから、これは通常、論文を与えているあな
たの典型的な課題ではありません。

106
00:06:46.570 --> 00:06:54.300
でも、レコメンのチャレンジのタイプにはな
かなか難しいです。

107
00:06:54.300 --> 00:07:01.075
そして、何が本当にこの競争を難しく、興味
深いものになります

108
00:07:01.075 --> 00:07:03.230
そして、私は一日の終わりに私たちを与えた
と思う

109
00:07:03.230 --> 00:07:09.175
勝利はテスト環境が非常に不規則だったとい
う事実だった。

110
00:07:09.175 --> 00:07:12.625
そして、我々は、この文脈では、不規則な定
義することができます

111
00:07:12.625 --> 00:07:19.685
列車のデータとテストデータが異なる顧客を
持っていた環境として。

112
00:07:19.685 --> 00:07:21.650
なので、重なりません。異なる顧客、

113
00:07:21.650 --> 00:07:23.560
もう一つは違う

114
00:07:23.560 --> 00:07:28.870
また、このデータは、一般的に異なる提供し
ていたトレーニング。

115
00:07:28.870 --> 00:07:33.110
それはあなたの分布を示すグラフを示してい
た

116
00:07:33.110 --> 00:07:39.225
その提供とかどうかは、電車の中で、または
テストデータまたはその両方に表示されます
。

117
00:07:39.225 --> 00:07:41.860
そして、あなたは、ほとんどのオファーを見
ることができます

118
00:07:41.860 --> 00:07:48.620
テストでのみ表示されるか、または最小限の
オーバーラップで電車内でのみ表示されます
。

119
00:07:48.620 --> 00:07:52.410
だから、それは少し困難になりますので、

120
00:07:52.410 --> 00:07:56.045
基本的にはソフトな製品でモデルを作らなけ
ればなりません。

121
00:07:56.045 --> 00:07:58.970
彼らは列車を提供していた

122
00:07:58.970 --> 00:08:01.485
しかし、テストデータでは、完全に他のオフ
ァーがあります。

123
00:08:01.485 --> 00:08:07.915
だから、これらの製品は、前に提供されてい
ないとしてどのように動作するかわからない
。

124
00:08:07.915 --> 00:08:10.705
そして最後の要素は、

125
00:08:10.705 --> 00:08:17.110
テストデータは明らかに将来のものです。そ
れは予想される。

126
00:08:17.110 --> 00:08:19.645
しかし、他の要素を考えると、

127
00:08:19.645 --> 00:08:21.480
これは、より困難になります,

128
00:08:21.480 --> 00:08:24.135
特に場合によっては、将来よくありました。

129
00:08:24.135 --> 00:08:26.900
そして、それのいくつかは、重要な要素とし
てではない

130
00:08:26.900 --> 00:08:32.650
しかし、まだ重要なのは、この課題は、買収
に焦点を当てていた。

131
00:08:32.650 --> 00:08:39.400
従って、顧客と提供されたプロダクト間のそ
れほどの歴史がない。

132
00:08:39.400 --> 00:08:45.420
そして、私はこれは、食料品の販売が不規則
であると言う

133
00:08:45.420 --> 00:08:53.415
原則は、顧客が既に好きで、過去に何度も買
っているものに基づいています。

134
00:08:53.415 --> 00:08:56.610
そこで、この種の買収問題について言及した
ところ、

135
00:08:56.610 --> 00:08:58.110
我々はあまり歴史を持っていない場所、

136
00:08:58.110 --> 00:08:59.835
コールドスタートの問題として、

137
00:08:59.835 --> 00:09:04.460
あなたがその直接リンクを持っていないので
、それははるかに困難です。

138
00:09:04.460 --> 00:09:08.310
それは、私が提供したこのプロダクトを実際
に好む顧客である

139
00:09:08.310 --> 00:09:13.270
我々はこれを確認することができますまたは
多くの歴史を持っていない過去の歴史を持っ
ていないので。

140
00:09:13.270 --> 00:09:21.255
そして最後の要素は、実際に購入するオファ
ーの性向を参照してください場合は、

141
00:09:21.255 --> 00:09:25.220
もう一度トレーニングデータで、

142
00:09:25.220 --> 00:09:27.965
結果はかなり違っていました。

143
00:09:27.965 --> 00:09:32.075
そしてここで、私はあなたに短縮性向によっ
て提供を与える

144
00:09:32.075 --> 00:09:37.205
そして、いくつかのオファーが再び購入する
多くの成功を持って見ることができます。

145
00:09:37.205 --> 00:09:40.960
それは何とかこれははるかに少ないていた2
を提供するようなものだ。

146
00:09:40.960 --> 00:09:42.400
たとえば、20%、

147
00:09:42.400 --> 00:09:43.670
そして、これはただの見本です。

148
00:09:43.670 --> 00:09:46.280
他にも 5%
前後のオファーがありました。

149
00:09:46.280 --> 00:09:51.605
だから、あなたは、コンテキストに今すべて
を置く場合、

150
00:09:51.605 --> 00:09:53.400
あなたは別の顧客を持って、

151
00:09:53.400 --> 00:09:57.415
異なった提供、異なったバイヤー、異なった
期間。

152
00:09:57.415 --> 00:09:59.220
原則として、あなたが持っていない

153
00:09:59.220 --> 00:10:02.460
顧客および提供プロダクトについてのそれ多
くの情報、

154
00:10:02.460 --> 00:10:08.210
そして、あなたは、トレーニングデータの提
供は、実際にはかなり異なっていることを知
っている。

155
00:10:08.210 --> 00:10:11.210
ここで標準的なパターンを得ることは本当に
難しいです。

156
00:10:11.210 --> 00:10:14.805
そして、あなたは、テストデータのオファー
が異なることになるだろう知っている。

157
00:10:14.805 --> 00:10:22.625
だから、すべてのこれは難しい問題を解決す
るか、不規則な環境にした。

158
00:10:22.625 --> 00:10:25.560
ビッグデータはどのように処理しましたか?

159
00:10:25.560 --> 00:10:27.410
我々は、インデックス付けでそれをした。

160
00:10:27.410 --> 00:10:29.965
そして、私はインデックスをした方法は、

161
00:10:29.965 --> 00:10:34.345
私は、データがすでに顧客と時間によって短
絡されたことを見た。

162
00:10:34.345 --> 00:10:39.540
だから、私は、トランザクションのこれらの
ビッグデータファイルを通過

163
00:10:39.540 --> 00:10:42.545
そして、新しいお客様に遭遇するたびに、

164
00:10:42.545 --> 00:10:44.225
私は新しいファイルを作成しました。

165
00:10:44.225 --> 00:10:46.790
だから私は、各顧客のための別のファイルを
作成

166
00:10:46.790 --> 00:10:49.805
すべての彼または彼女のトランザクションが
含まれて

167
00:10:49.805 --> 00:10:53.035
そして、それは本当に簡単に機能を生成する
ために作ら

168
00:10:53.035 --> 00:10:56.125
特定の顧客の機能を生成する必要がある場合
は、

169
00:10:56.125 --> 00:11:00.900
私はちょうどこのファイルにアクセスし、私
は意志で望んでいたすべての機能を作成しま
す。

170
00:11:00.900 --> 00:11:02.865
これも非常にスケーラブルです。

171
00:11:02.865 --> 00:11:06.020
だから私は並列でこれを行うにはスレッドを
作成することができます。

172
00:11:06.020 --> 00:11:08.235
したがって、多くの顧客に並行してアクセス
します。

173
00:11:08.235 --> 00:11:11.660
そして、私はすべての顧客のためだけでなく
、これをした

174
00:11:11.660 --> 00:11:15.105
しかし、すべてのカテゴリ、ブランド、およ
び会社のためにも。

175
00:11:15.105 --> 00:11:18.365
なので、情報にアクセスしたいと思うたびに
、

176
00:11:18.365 --> 00:11:21.690
私はちょうど右の部門、右のブランドにアク
セスする

177
00:11:21.690 --> 00:11:23.025
または右の顧客、

178
00:11:23.025 --> 00:11:25.245
と私は、私が欲しかった情報を取得します

179
00:11:25.245 --> 00:11:32.355
そして、それは非常にデータのすべてのこれ
らの大きな塊を処理するために迅速にした。

180
00:11:32.355 --> 00:11:39.120
しかし、私は最も重要なことだと思うものは
、我々はこの不規則性を処理する方法です。

181
00:11:39.120 --> 00:11:40.240
私は一日の終わりに、と思う

182
00:11:40.240 --> 00:11:45.920
これが我々の勝利を決定するものだかつて我
々はこの権利を得たので

183
00:11:45.920 --> 00:11:49.420
そして、我々はあらゆる種類のを試すことが
できた

184
00:11:49.420 --> 00:11:54.410
物事は、我々はそれがテストデータで動作す
るという自信を持っていた。

185
00:11:54.410 --> 00:11:57.870
私たちがやろうとした最初のものは、これは
何か

186
00:11:57.870 --> 00:12:03.265
本当に理解して欲しい

187
00:12:03.265 --> 00:12:09.740
テスト対象を内部的にレプリケートする方法
を説明します。

188
00:12:09.740 --> 00:12:11.885
それは本当に重要です。

189
00:12:11.885 --> 00:12:16.515
私はあなたのすべてのこれらのことを試みる
ために部屋を与えるでしょう。

190
00:12:16.515 --> 00:12:20.925
すべての異なる順列とデータ技術の組み合わ
せを試してみて、

191
00:12:20.925 --> 00:12:23.455
あなたが持っているものは何でも念頭に置く
ことができる

192
00:12:23.455 --> 00:12:27.955
そして、本当に何が動作し、何ではない理解
する。

193
00:12:27.955 --> 00:12:30.350
だから、我々はそれをしようとした。

194
00:12:30.350 --> 00:12:32.510
試みの最初の非常にうまく行かなかった。

195
00:12:32.510 --> 00:12:35.750
だから我々はランダムに分割しようとする

196
00:12:35.750 --> 00:12:40.640
列車と検証の間のデータは、我々は特定のよ
うにしようとしている

197
00:12:40.640 --> 00:12:45.090
各オファーは、この列車の各1つで均等に表
され、

198
00:12:45.090 --> 00:12:50.555
検証データは比例して等しく設定されます。

199
00:12:50.555 --> 00:12:52.440
しかし、それは正しかった?

200
00:12:52.440 --> 00:12:54.335
考えてみれば

201
00:12:54.335 --> 00:12:56.730
そこでやっていたことは、

202
00:12:56.730 --> 00:13:00.330
私たちはいくつかのオファーとモデルを構築
していると言っていた

203
00:13:00.330 --> 00:13:04.550
私は同じオファーで検証しています。それは
いいですね。

204
00:13:04.550 --> 00:13:05.800
ここでうまくやっていけるかも

205
00:13:05.800 --> 00:13:08.515
しかし、これは我々が実際にテストされてい
るものですか?

206
00:13:08.515 --> 00:13:10.100
違います。テストデータでは、

207
00:13:10.100 --> 00:13:12.030
我々は完全に異なるオファーがあります。

208
00:13:12.030 --> 00:13:13.705
だから、これは非常にうまく機能しませんで
した。

209
00:13:13.705 --> 00:13:19.570
これは非常に良い内部結果を与えていたが、
テストデータでは非常に良好な結果ではない
。

210
00:13:19.570 --> 00:13:21.420
だから、我々は他の何かを試みた。

211
00:13:21.420 --> 00:13:25.820
1つのオファーを残してもいいですか?

212
00:13:25.820 --> 00:13:29.725
そして、私はこれがどのように見えるかを大
まかに示しています。

213
00:13:29.725 --> 00:13:32.345
だから、すべてのオファーについては、

214
00:13:32.345 --> 00:13:36.370
私達はで提供を置くことができる

215
00:13:36.370 --> 00:13:43.365
検証データとモデルを訓練するために他のす
べてのオファーのすべてのケースを使用する
?

216
00:13:43.365 --> 00:13:46.650
それで我々が提案16を予測するなら

217
00:13:46.650 --> 00:13:53.370
我々は、提供を受けたすべての顧客を使用し
ます1へ15と17

218
00:13:53.370 --> 00:13:57.120
24は、モデルを構築し、我々が作るよ

219
00:13:57.120 --> 00:14:02.545
オファーを受け取ったすべての顧客の予測
16.

220
00:14:02.545 --> 00:14:07.560
そして、あなたは、これが実際には非常にあ
なたがテストされているものに近いことがわ
かります

221
00:14:07.560 --> 00:14:12.000
あなたがいくつかのオファーが、モデルを構
築している知っているので、上

222
00:14:12.000 --> 00:14:16.125
あなたはそこではないいくつかの他のオファ
ーでテストされている。

223
00:14:16.125 --> 00:14:20.340
そして、あなたはすべてのこれらの24のユ
ーザーの平均を取ることができると私

224
00:14:20.340 --> 00:14:25.205
これはあなたが実際にトレーニングデータを
持っているどのように多くのオファーである
ため、24を入れてください。

225
00:14:25.205 --> 00:14:32.940
あなたはその平均を取ることができ、その平
均は現実にはるかに近いかもしれませんが、

226
00:14:32.940 --> 00:14:35.190
あなたがテストされていたものに近い。

227
00:14:35.190 --> 00:14:37.860
そして、これは本当でした。これは、より良
い結果を与えた

228
00:14:37.860 --> 00:14:41.665
しかし、我々はまだそこにいなかった。

229
00:14:41.665 --> 00:14:44.080
そこにいなかった理由を教えよう

230
00:14:44.080 --> 00:14:46.215
次の問題を考えてみましょう。

231
00:14:46.215 --> 00:14:49.620
ここでは、私はあなたの小さなサンプルをあ
げる

232
00:14:49.620 --> 00:14:54.250
オファー2の予測と実際の目標は何でしたか
?

233
00:14:54.250 --> 00:14:58.610
私たちがここで見るものは、完全な AUC
スコアです。

234
00:14:58.610 --> 00:15:02.785
なぜでしょうか。すべての肯定的なケースの
ため

235
00:15:02.785 --> 00:15:07.060
それは1つでラベル付けされ、彼らは緑の色
を持って、

236
00:15:07.060 --> 00:15:11.200
赤いものよりも高いスコアを持って、

237
00:15:11.200 --> 00:15:13.310
ターゲットがゼロの場合。

238
00:15:13.310 --> 00:15:16.295
なので、ここでの差別は完璧です。

239
00:15:16.295 --> 00:15:18.560
我々はポイント、カットオフポイントを持っ
ています。

240
00:15:18.560 --> 00:15:24.760
ここでは、スコアがこれよりも高いすべての
ケースここで0.5
を設定することができます。

241
00:15:24.760 --> 00:15:28.240
我々は安全に彼らが1つであると言うことが
でき、それは

242
00:15:28.240 --> 00:15:32.670
true とスコアがこれよりも低いすべて
がゼロです。

243
00:15:32.670 --> 00:15:36.510
だから、ここで1つの差別を参照してくださ
い完璧です。

244
00:15:36.510 --> 00:15:41.145
では、オファー4からサンプルを取りましょ
う。

245
00:15:41.145 --> 00:15:43.265
4つのオファーを覚えている場合は、

246
00:15:43.265 --> 00:15:46.765
一般により低い傾向で持っていた。

247
00:15:46.765 --> 00:15:52.055
提供2はおよそ0.5
を有し、4つは0.2
のまわりにあった提供する。

248
00:15:52.055 --> 00:15:58.525
だから、それは我々がはるかに低く、ここで
見ることができるものを中心にしている意味
だ、再び、

249
00:15:58.525 --> 00:16:04.800
AUC
は、このサンプルに最適ですので、再び、

250
00:16:04.800 --> 00:16:12.135
緑でラベル付けされているすべての高いスコ
アは、1つのターゲットを持っています。

251
00:16:12.135 --> 00:16:13.770
そして、より低いスコア、

252
00:16:13.770 --> 00:16:19.840
スコアが0.18 未満のものはすべて0の
ターゲットを持っています。

253
00:16:19.840 --> 00:16:21.490
差別は完璧です。

254
00:16:21.490 --> 00:16:23.445
我々はこのカットオフポイントを見つけるこ
とができます。

255
00:16:23.445 --> 00:16:26.230
我々は0.8
を言うことができる、どこにあるすべての

256
00:16:26.230 --> 00:16:29.270
これより高いスコアは安全に1に設定するこ
とができます。

257
00:16:29.270 --> 00:16:31.025
そして、それは常に真実です。

258
00:16:31.025 --> 00:16:34.715
18未満のものは全てその逆

259
00:16:34.715 --> 00:16:36.475
それからは 0.

260
00:16:36.475 --> 00:16:37.990
そして、それは常に真実です。

261
00:16:37.990 --> 00:16:40.775
だから、我々は2つのスコアがあります。

262
00:16:40.775 --> 00:16:45.185
彼らは良いと悪いケースの間に本当によく区
別します。

263
00:16:45.185 --> 00:16:50.035
しかし、我々は1つのオファーの AUC
でテストされていません。

264
00:16:50.035 --> 00:16:53.000
我々は一緒にすべてのオファーの AUC
でテストされています。

265
00:16:53.000 --> 00:16:55.190
したがって、テストデータには多くのオファ
ーがあります。

266
00:16:55.190 --> 00:17:00.215
だから、あなたはすべてのオファーに対して
も一般化スコアに興味を持っています。

267
00:17:00.215 --> 00:17:04.390
このテーブルをマージしようとするとどうな
りますか?

268
00:17:04.390 --> 00:17:08.365
AUC は、もはや完璧ではない、なぜこれ
が起こる?

269
00:17:08.365 --> 00:17:12.200
いくつかの否定的なケースのために

270
00:17:12.200 --> 00:17:17.065
最初のオファーは、肯定的なケースよりも高
いスコアを持っていた

271
00:17:17.065 --> 00:17:23.145
ターゲットを持っているものは、2番目のオ
ファーから1つに等しくなります。

272
00:17:23.145 --> 00:17:27.980
だから、内部差別は本当に良いですが、見る
ことができます

273
00:17:27.980 --> 00:17:29.750
彼らはよくブレンドしていません。

274
00:17:29.750 --> 00:17:32.480
あなたはその能力から何かを失う

275
00:17:32.480 --> 00:17:36.305
あなたのスコアは、ものとゼロを区別する。

276
00:17:36.305 --> 00:17:38.530
これを見た瞬間

277
00:17:38.530 --> 00:17:44.815
私達はちょうど1つの提供を去ることが十分
であることを行っていなかったことを知って
いた。

278
00:17:44.815 --> 00:17:48.605
私たちは、私たちが一緒にすべてのスコアを
マージすることを確認しなければならなかっ
た

279
00:17:48.605 --> 00:17:50.560
スコアはまだ良いです。

280
00:17:50.560 --> 00:17:56.970
私たちのモデルの判別能力は依然として強力
であるか、または失うことはありません。

281
00:17:56.970 --> 00:18:02.920
だからこそ、私たちの組み合わせを使用して
いる

282
00:18:02.920 --> 00:18:10.395
この連結を行った後、すべてのオファーと
auc の前の平均 auc。

283
00:18:10.395 --> 00:18:14.180
したがって、2つの AUCs
の平均は、実際に我々がしようとする指標

284
00:18:14.180 --> 00:18:17.010
我々は考えたので、最適化

285
00:18:17.010 --> 00:18:20.435
これは実際に我々がテストされていたものに
非常に近いです。

286
00:18:20.435 --> 00:18:22.890
そして、ここで私はあなたの結果を示すこと
ができます

287
00:18:22.890 --> 00:18:26.880
すべての私たちの試みと、これはその点で、
機能の小さなサブセットとされている

288
00:18:26.880 --> 00:18:29.210
我々は、最高の機能を作成するには興味がな
かった

289
00:18:29.210 --> 00:18:33.060
我々はどのアプローチが最もよく働くかをテ
ストするために興味があった。

290
00:18:33.060 --> 00:18:37.345
だから、あなたはそれが標準成層 K
倍を行うかどうかを確認することができます

291
00:18:37.345 --> 00:18:42.720
内部のクロス検証ではよりよい結果を得るこ
とができますが、テストデータでは、

292
00:18:42.720 --> 00:18:45.835
関係はほぼ反対です。

293
00:18:45.835 --> 00:18:50.060
したがって、クロス検証で最高のスコアは、
テストデータの悪化の結果につながります。

294
00:18:50.060 --> 00:18:54.885
そして、あなたはそうではないので、なぜ見
ることができます

295
00:18:54.885 --> 00:19:01.115
内部的にモデリングまたは内部的に検証また
は実際にテストされているものに。

296
00:19:01.115 --> 00:19:04.600
1つを行う-オファーをキープ

297
00:19:04.600 --> 00:19:08.080
明らかに内部のクロス検証結果が低い

298
00:19:08.080 --> 00:19:10.500
テストデータのパフォーマンスが向上し、

299
00:19:10.500 --> 00:19:16.750
しかし、さらに良いこの休暇をやっていた-
1
つのオファーに加え、最後に1つの連結。

300
00:19:16.750 --> 00:19:22.565
そして、この AUC は低かったが、実際
により良いテスト結果を持っていた。

301
00:19:22.565 --> 00:19:26.440
我々が作った場合、我々はさらに良い結果を
得ることができると信じて

302
00:19:26.440 --> 00:19:30.330
確かに我々はまた、新しい顧客で検証してい
る。

303
00:19:30.330 --> 00:19:33.365
しかし、我々は実際にこれを行っていないた
め

304
00:19:33.365 --> 00:19:36.930
我々は、このアプローチはすでに良い結果を
見た。

305
00:19:36.930 --> 00:19:39.080
でも改善する手段としては、

306
00:19:39.080 --> 00:19:42.640
私達はまた私達が検証する
certains を作ったかもしれない

307
00:19:42.640 --> 00:19:47.000
これはテストのようなものであるため、別の
顧客に。

