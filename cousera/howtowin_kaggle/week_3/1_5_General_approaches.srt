1
00:00:03.210 --> 00:00:09.520
このビデオでは、どのような損失であり、何
メトリックは、議論する

2
00:00:09.520 --> 00:00:11.905
そして、それらの違いは何ですか。

3
00:00:11.905 --> 00:00:18.155
次に、メトリック最適化の一般的なアプロー
チについて説明します。

4
00:00:18.155 --> 00:00:23.545
2つの概念、損失、およびメトリックの比較
から始めましょう。

5
00:00:23.545 --> 00:00:27.460
メトリックまたはターゲットメトリックは、
我々は

6
00:00:27.460 --> 00:00:31.690
私達のモデルの質を評価するのに使用したい
と思う。

7
00:00:31.690 --> 00:00:34.390
たとえば、分類タスクの場合は、

8
00:00:34.390 --> 00:00:38.097
我々は、予測の精度を最大限にすることがあ
ります

9
00:00:38.097 --> 00:00:41.765
モデルが正しいラベルを出力する頻度。

10
00:00:41.765 --> 00:00:47.415
しかし、問題は、誰も本当に効率的に精度を
最適化する方法を知っているということです
。

11
00:00:47.415 --> 00:00:51.770
代わりに、人々は、プロキシの損失関数を思
い付く。

12
00:00:51.770 --> 00:00:57.105
これらは、特定のモデルに対して最適化が容
易な評価関数です。

13
00:00:57.105 --> 00:01:02.325
たとえば、対数損失は、最適化の損失として
広く使用されています。

14
00:01:02.325 --> 00:01:07.530
精度スコアは、ソリューションが最終的に評
価される方法ですが。

15
00:01:07.530 --> 00:01:11.220
だから、もう一度、損失関数は、関数です

16
00:01:11.220 --> 00:01:15.205
私たちのモデルが最適化し、ソリューション
を評価するために使用すること、

17
00:01:15.205 --> 00:01:20.455
また、ターゲットメトリックは、ソリューシ
ョンをどのように評価するかを指定します。

18
00:01:20.455 --> 00:01:24.365
これは、現実のものに対する期待のようなも
のです。

19
00:01:24.365 --> 00:01:30.670
時には我々は幸運であり、モデルは直接我々
の目標指標を最適化することができます。

20
00:01:30.670 --> 00:01:34.360
たとえば、平均二乗誤差メトリックの場合、

21
00:01:34.360 --> 00:01:39.960
ほとんどのライブラリは、ボックスから、最
初からそれを最適化することができます。

22
00:01:39.960 --> 00:01:43.745
したがって、損失関数はターゲットメトリッ
クと同じです。

23
00:01:43.745 --> 00:01:46.690
そして、時には我々は、メトリックを最適化
したい

24
00:01:46.690 --> 00:01:50.845
は実際に直接最適化することは困難また更に
不可能である。

25
00:01:50.845 --> 00:01:53.420
この場合、通常はモデルを最適化するように
設定します。

26
00:01:53.420 --> 00:01:56.545
目標指標とは異なる損失

27
00:01:56.545 --> 00:01:58.420
しかし、モデルが訓練された後、

28
00:01:58.420 --> 00:02:02.290
私達は不一致を否定するのに刻み目およびヒ
ューリスティックを使用する

29
00:02:02.290 --> 00:02:07.520
、ターゲットメトリックに適合するようにモ
デルを調整します。

30
00:02:07.520 --> 00:02:11.810
我々は、次のビデオの両方のケースの例が表
示されます。

31
00:02:11.810 --> 00:02:14.935
そして、最後に言及することは、損失のメト
リックは、

32
00:02:14.935 --> 00:02:22.055
コストの目標とその他の概念は、類義語とし
て使用されます。

33
00:02:22.055 --> 00:02:26.680
それは完全に目標の損失と最適化のメトリッ
クと言っても大丈夫です

34
00:02:26.680 --> 00:02:29.895
しかし、私たちは、明快さのための言葉遣い
を今修正するでしょう。

35
00:02:29.895 --> 00:02:33.495
さて、これまでのところ、我々は理解してき
た

36
00:02:33.495 --> 00:02:38.745
なぜそれが重要な競争の中で与えられた指標
を最適化することです。

37
00:02:38.745 --> 00:02:44.395
また、最適化の損失と目標指標の違いについ
ても説明しました。

38
00:02:44.395 --> 00:02:50.305
ここでは、一般的な指標の最適化を目標にす
るためのアプローチについて説明します。

39
00:02:50.305 --> 00:02:54.600
アプローチは、いくつかのカテゴリに大別す
ることができます。

40
00:02:54.600 --> 00:02:57.300
メトリックに応じて、我々は最適化する必要
があります。

41
00:02:57.300 --> 00:03:01.050
いくつかの指標を直接最適化することができ
ます。

42
00:03:01.050 --> 00:03:06.825
つまり、このメトリックを最適化して実行す
るモデルを見つけるだけです。

43
00:03:06.825 --> 00:03:13.200
実際には、我々が行う必要があるのは、これ
らのメトリックにモデルの損失関数を設定す
ることです。

44
00:03:13.200 --> 00:03:16.055
MSE などの最も一般的なメトリックは、

45
00:03:16.055 --> 00:03:22.470
Logloss は、ほとんどすべてのライ
ブラリで損失関数として実装されています。

46
00:03:22.470 --> 00:03:26.090
直接最適化できないメトリックのいくつかに
ついては、

47
00:03:26.090 --> 00:03:29.610
私たちは何とか事前に列車のセットを使用し
て処理することができます

48
00:03:29.610 --> 00:03:34.245
最適化が容易なメトリックまたは損失関数を
持つモデル。

49
00:03:34.245 --> 00:03:40.265
たとえば、MSPE メトリックを
XGBoost
で直接最適化することはできませんが、

50
00:03:40.265 --> 00:03:46.539
我々は、後で我々は列車セットをリサンプリ
ングし、代わりに MSE の損失を最適化
することができますが表示されます

51
00:03:46.539 --> 00:03:48.930
どの XGBoost
を最適化することができます。

52
00:03:48.930 --> 00:03:52.470
場合によっては、不適切なメトリックを最適
化します。

53
00:03:52.470 --> 00:03:58.890
しかし、我々は、分類に合わせて予測を後処
理します

54
00:03:58.890 --> 00:04:01.850
より良い通信メトリックに合わせてください
。

55
00:04:01.850 --> 00:04:03.810
いくつかのモデルやフレームワークについて
は、

56
00:04:03.810 --> 00:04:06.765
これは、カスタムの損失関数を定義すること
が可能です

57
00:04:06.765 --> 00:04:10.320
そして、時にはそれが可能な損失関数を実装
することです

58
00:04:10.320 --> 00:04:14.345
望ましいメトリックのための素敵なプロキシ
として機能します。

59
00:04:14.345 --> 00:04:19.715
たとえば、後で説明するように、2次重み付
きカッパに対して行うことができます。

60
00:04:19.715 --> 00:04:24.750
XGBoost のためのカスタム損失関数
を定義するのは、実際には非常に簡単です。

61
00:04:24.750 --> 00:04:27.735
我々は、単一の関数を実装する必要がありま
す

62
00:04:27.735 --> 00:04:30.910
予測と目標値を取得し、

63
00:04:30.910 --> 00:04:34.090
第1および第2次の微分を計算する

64
00:04:34.090 --> 00:04:37.890
モデルの予測に関する損失関数の。

65
00:04:37.890 --> 00:04:41.275
たとえば、ここでは、Logloss
の1つを参照してください。

66
00:04:41.275 --> 00:04:47.485
もちろん、損失関数は十分に滑らかにする必
要がありますし、よく振るデリバティブを持
って、

67
00:04:47.485 --> 00:04:50.455
さもなければ XGBoost
は狂気を運転する。

68
00:04:50.455 --> 00:04:53.965
このコースでは、我々は、メトリックの小さ
なセットを考慮する

69
00:04:53.965 --> 00:04:56.300
しかし、実際にはたくさんあります。

70
00:04:56.300 --> 00:04:57.960
その中には

71
00:04:57.960 --> 00:05:00.110
思いつくのは本当に大変ですが

72
00:05:00.110 --> 00:05:05.155
きちんとした最適化の手順またはカスタムの
損失関数を記述します。

73
00:05:05.155 --> 00:05:09.020
ありがたいことに、常にうまくいく方法があ
ります。

74
00:05:09.020 --> 00:05:10.955
早めに止めといて、

75
00:05:10.955 --> 00:05:13.310
そして、それは非常に簡単です。

76
00:05:13.310 --> 00:05:16.290
あなたはそれができる任意の損失関数を最適
化するためにモデルを設定する

77
00:05:16.290 --> 00:05:21.225
最適化し、検証セットの目的のメトリックを
監視します。

78
00:05:21.225 --> 00:05:25.820
そして、あなたはモデルがに応じて収まるよ
うに開始するときにトレーニングを停止する

79
00:05:25.820 --> 00:05:30.815
目的のメトリックではなく、モデルが真に最
適化されているメトリックによると。

80
00:05:30.815 --> 00:05:33.155
それは重要です。もちろんです

81
00:05:33.155 --> 00:05:36.615
いくつかの指標を簡単に評価することはでき
ません。

82
00:05:36.615 --> 00:05:40.730
たとえば、メトリックが人間の査定者の意見
に基づいている場合、

83
00:05:40.730 --> 00:05:44.500
イテレーションごとに評価することはできま
せん。

84
00:05:44.500 --> 00:05:47.730
このような指標については、我々は早期停止
を使用することはできません

85
00:05:47.730 --> 00:05:51.370
しかし、我々は競争の中でそのような指標を
見つけることはありません。

86
00:05:51.370 --> 00:05:53.050
だから、このビデオでは、

87
00:05:53.050 --> 00:05:56.080
我々は、ターゲットの間の不一致を議論して
いる

88
00:05:56.080 --> 00:06:00.055
我々のモデルが最適化するメトリックと損失
関数。

89
00:06:00.055 --> 00:06:04.150
我々は、目標指標の最適化にいくつかのアプ
ローチを検討し、

90
00:06:04.150 --> 00:06:06.880
特に、議論の早期停止。

91
00:06:06.880 --> 00:06:11.480
次のビデオでは、我々は回帰を通過し、

92
00:06:11.480 --> 00:06:17.390
分類のメトリックと我々はそれらを最適化す
るために使用できるハッキングを参照してく
ださい。

