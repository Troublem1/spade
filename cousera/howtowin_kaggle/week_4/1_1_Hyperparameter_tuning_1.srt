1
00:00:00.000 --> 00:00:04.284
音楽

2
00:00:04.284 --> 00:00:09.149
こんにちは、この講義では、ハイパーパラメ
ータの最適化プロセスを研究し、

3
00:00:09.149 --> 00:00:13.530
特定のライブラリやモデルでハイパーパラメ
ータについて話します。

4
00:00:13.530 --> 00:00:17.430
まず、ハイパーパラメータのチューニング全
般について説明します。

5
00:00:17.430 --> 00:00:22.220
一般的なパイプライン、ハイパーパラメータ
をチューニングする方法、およびそれが実際
に何

6
00:00:22.220 --> 00:00:26.800
特定のハイパーパラメータがモデルにどのよ
うに影響するかを理解することを意味します
。

7
00:00:28.790 --> 00:00:31.100
それは実際に我々はこのビデオで議論するも
のであり、

8
00:00:31.100 --> 00:00:33.900
次に、ライブラリとフレームワークについて
説明し、

9
00:00:33.900 --> 00:00:37.440
いくつかのタイプのモデルのハイパーパラメ
ータをチューニングする方法を参照してくだ
さい。

10
00:00:39.090 --> 00:00:41.651
すなわち、我々は最初のツリーベースのモデ
ルを検討する

11
00:00:41.651 --> 00:00:45.380
デシジョンツリーと
RandomForest
をブーストするグラデーション。

12
00:00:45.380 --> 00:00:49.060
それから、ニューラルネットの重要なハイパ
ーパラメータを復習します。

13
00:00:49.060 --> 00:00:53.700
そして最後に、我々は線形モデルについては
、ここでそれらを見つけるために話をする

14
00:00:53.700 --> 00:00:54.450
どのようにそれらを調整する。

15
00:00:55.750 --> 00:00:58.580
興味深いモデルのもう一つのクラスは、因数
分解機です。

16
00:00:59.600 --> 00:01:02.190
この講義では分解機については説明しません
が、

17
00:01:02.190 --> 00:01:04.980
しかし、私はあなたがインターネット上でそ
れらについて読むことをお勧め。

18
00:01:06.630 --> 00:01:11.780
では、まず、モデルのチューニングプロセス
についての一般的な説明から始めましょう。

19
00:01:12.800 --> 00:01:16.859
ハイパーパラメータをチューニングする際に
理解すべき最も重要なことは何ですか。

20
00:01:18.180 --> 00:01:22.640
まず、すべてのモデルでチューニングする潜
在的なパラメータのトンがあります。

21
00:01:22.640 --> 00:01:26.380
したがって、どのパラメータが最もモデルに
影響するかを認識する必要があります。

22
00:01:27.590 --> 00:01:30.470
もちろん、すべてのパラメータは、信頼性の
高い

23
00:01:30.470 --> 00:01:35.050
しかし、我々のような最も重要なものを選択
する必要があります。

24
00:01:35.050 --> 00:01:38.980
とにかく我々はすべてのパラメータを調整す
る時間がない、その権利です。

25
00:01:38.980 --> 00:01:42.665
だから我々はチューニングするパラメータの
素敵なサブセットを思い付く必要があります
。

26
00:01:42.665 --> 00:01:44.805
我々は xgboost
に新しいしていると仮定し、

27
00:01:44.805 --> 00:01:49.088
我々は、パラメータは、チューニングするよ
り良いものを見つけるためにしようとしてい
る

28
00:01:49.088 --> 00:01:53.920
我々もどのように勾配をブーストデシジョン
ツリーの動作を理解していないと言う。

29
00:01:55.080 --> 00:01:59.906
xgboost を使用する場合、通常はど
のパラメータを設定するかを常に検索できま
す。

30
00:01:59.906 --> 00:02:01.086
ルックアップするのはかなり簡単ですよね?

31
00:02:01.086 --> 00:02:05.290
たとえば、GitHub または
Kaggle カーネルでは。

32
00:02:06.900 --> 00:02:10.750
最後に、ドキュメントが明示的にどのパラメ
ータを示す

33
00:02:10.750 --> 00:02:11.670
最初にチューニングする。

34
00:02:13.010 --> 00:02:16.760
パラメータの選択したセットから、我々はそ
れを理解する必要があります

35
00:02:16.760 --> 00:02:19.490
パラメータの1つを変更するとどうなるでし
ょうか。

36
00:02:20.520 --> 00:02:25.840
トレーニングプロセスとトレーニング無効化
コースが変更された場合、

37
00:02:25.840 --> 00:02:28.390
たとえば、特定のパラメータを増やしたとし
ます。

38
00:02:30.090 --> 00:02:35.030
そして最後に、実際に選択したパラメータを
調整する、右?

39
00:02:35.030 --> 00:02:38.070
ほとんどの人が手動でそれを行う。

40
00:02:38.070 --> 00:02:41.700
実行するだけで、ログを調べ、パラメータを
変更し、

41
00:02:41.700 --> 00:02:45.230
再度実行し、適切なパラメータが見つかるま
で反復します。

42
00:02:45.230 --> 00:02:50.063
ハイパーパラメータの最適化を使用すること
も可能です。

43
00:02:50.063 --> 00:02:53.900
hyperopt のようなツールが、それ
は通常、手動で本当のことを行うには高速で
す。

44
00:02:55.090 --> 00:02:59.550
したがって、このビデオの後半では、実際に
は、最も重要なパラメータについて議論

45
00:02:59.550 --> 00:03:05.400
いくつかの直感と一緒にいくつかのモデルは
どのようにこれらのモデルのこれらのパラメ
ータを調整する。

46
00:03:06.960 --> 00:03:10.870
しかし、開始する前に、私は実際にライブラ
リのリストを提供したい

47
00:03:10.870 --> 00:03:14.970
ハイパーパラメータの自動チューニングに使
用できます。

48
00:03:16.170 --> 00:03:20.580
実際にそれらの多くがあり、私はこのリスト
からすべてを試していない

49
00:03:20.580 --> 00:03:25.420
自分でも、実際に試したものから、あまり気
付かなかったのですが

50
00:03:25.420 --> 00:03:29.510
ライブラリ間の実際のタスクの最適化速度の
違い。

51
00:03:29.510 --> 00:03:33.780
しかし、時間があれば、すべてのライブラリ
を試してみて、比較することができます。

52
00:03:35.250 --> 00:03:39.928
ユーザー側からは、これらのライブラリは非
常に使いやすいです。

53
00:03:39.928 --> 00:03:41.501
まず、モジュールを実行する関数を定義する
必要があります。

54
00:03:41.501 --> 00:03:42.264
この場合、XGBoost です。

55
00:03:42.264 --> 00:03:48.436
指定されたパラメータセットを使用してモジ
ュールを実行し、

56
00:03:48.436 --> 00:03:52.520
結果の検証スコアを返します。

57
00:03:54.090 --> 00:03:57.530
次に、ソース領域を指定する必要があります
。

58
00:03:57.530 --> 00:04:03.420
ソリューションを検索するハイパーパラメー
タの範囲。

59
00:04:03.420 --> 00:04:07.624
例えば、ここでは、パラメータを参照してく
ださい、それは修正0.1 です。

60
00:04:07.624 --> 00:04:13.744
そして、我々は、最適な最大深度はどこか1
0と30の間にあると思います。

61
00:04:15.690 --> 00:04:18.730
そして、実際にそれは、我々は
hyperopt
を実行する準備が整いました。

62
00:04:18.730 --> 00:04:24.410
それは多くの時間を取ることができるので、
最善の戦略は一晩それを実行することです。

63
00:04:26.070 --> 00:04:31.260
また、我々はハイパーパラメータについて知
る必要があるすべてのことに注意してくださ
い,

64
00:04:31.260 --> 00:04:35.220
この場合、検索に適した範囲です。

65
00:04:35.220 --> 00:04:40.560
それはかなり便利です,
あなたは、新しいモデルを知らない場合、

66
00:04:40.560 --> 00:04:43.350
逃げようとしただけだ

67
00:04:43.350 --> 00:04:45.800
しかし、それでも、ほとんどの人が手動でモ
デルを調整した。

68
00:04:47.850 --> 00:04:52.020
だから、正確にどのように理解することを意
味するのか

69
00:04:52.020 --> 00:04:54.350
パラメータはモデルに影響を及ぼしますか?

70
00:04:55.590 --> 00:04:56.990
大ざっぱに

71
00:04:56.990 --> 00:05:02.570
パラメータの値が異なると、3つのフィッテ
ィング動作が発生します。

72
00:05:02.570 --> 00:05:05.180
まず、モデルを underfit
ことができます。

73
00:05:06.270 --> 00:05:10.980
つまり、列車のセットを覚えることすらでき
ないほど制約されているのです。

74
00:05:12.400 --> 00:05:16.440
もう一つの可能性は、モデルが非常に強力で
あるということです

75
00:05:16.440 --> 00:05:20.519
それはちょうど列車セットに overfi
ts、すべてを一般化することはできません
。

76
00:05:21.630 --> 00:05:22.570
そして最後に

77
00:05:22.570 --> 00:05:26.810
3番目の行動は、私たちが実際に探している
ものです。

78
00:05:26.810 --> 00:05:29.760
underfitting
とオーバーフィット回避の間のどこかに

79
00:05:31.546 --> 00:05:37.280
したがって、基本的に、パラメータを回しな
がら調べるべきことは、

80
00:05:37.280 --> 00:05:43.140
我々は、モデルが現在
underfitting またはオーバー
フィット回避であるかどうかを理解しようと
する必要があります。

81
00:05:43.140 --> 00:05:46.320
そして、我々は何とかパラメータを得るため
に調整する必要があります

82
00:05:46.320 --> 00:05:48.030
望ましい動作に近い。

83
00:05:49.580 --> 00:05:53.880
我々は、我々はにチューニングしたいすべて
のパラメータを分割の種類が必要

84
00:05:53.880 --> 00:05:55.700
2つのグループ。

85
00:05:55.700 --> 00:05:59.910
最初のグループには、モデルを制約するパラ
メータがあります。

86
00:05:59.910 --> 00:06:03.970
そのため、そのグループからパラメータを増
やすと、

87
00:06:03.970 --> 00:06:09.440
モデルは、オーバーフィット回避から
underfitting
への振る舞いを変えるでしょう。

88
00:06:09.440 --> 00:06:13.909
パラメータの値が大きいほど、制約が重くな
ります。

89
00:06:13.909 --> 00:06:18.981
次のビデオでは、このようなパラメータを赤
で色分けし、パラメータ

90
00:06:18.981 --> 00:06:23.407
2番目のグループでは私たちのトレーニング
プロセスに反対のことをやっている。

91
00:06:23.407 --> 00:06:27.660
値が高いほど、メインモジュールがより強力
になります。

92
00:06:28.760 --> 00:06:31.090
このようなパラメータを増やすことによって
、

93
00:06:31.090 --> 00:06:35.310
underfitting からオーバーフ
ィット回避へのフィッティング動作を変更す
ることができます。

94
00:06:36.320 --> 00:06:38.810
我々は、このようなパラメータの緑の色を使
用します。

95
00:06:40.570 --> 00:06:43.600
だから、このビデオでは、いくつかの議論さ
れます

96
00:06:43.600 --> 00:06:47.150
ハイパーパラメータ組織の一般的な側面。

97
00:06:47.150 --> 00:06:51.600
最も重要なのは、色分けを定義したことです
。

98
00:06:51.600 --> 00:06:53.940
あなたは色が何のために立って理解していな
い場合

99
00:06:53.940 --> 00:06:57.710
何を、もう一度ビデオの一部を見てください
。

100
00:06:58.750 --> 00:07:01.860
我々は、次のビデオを通してこの色のコーデ
ィングを使用します。

101
00:07:01.860 --> 00:07:11.860
音楽

