1
00:00:00.000 --> 00:00:03.780
音楽

2
00:00:03.780 --> 00:00:09.093
こんにちは、このビデオでは、データセット
のクリーニングの少しについて説明します

3
00:00:09.093 --> 00:00:12.220
データセットがシャッフルされているかどう
かを確認する方法

4
00:00:12.220 --> 00:00:16.790
競争データが離れているだけである場合もあ
ることを理解することは重要である

5
00:00:16.790 --> 00:00:18.468
データの主催者が持っている。

6
00:00:18.468 --> 00:00:23.604
主催者は、私たちが持っているオブジェクト
の割合を与えることができるか

7
00:00:23.604 --> 00:00:25.690
一部の機能。

8
00:00:25.690 --> 00:00:29.140
だからこそ、我々はデータにいくつかの問題
を持つことができます。

9
00:00:29.140 --> 00:00:33.816
例えば、我々は、同じ値を取る機能に遭遇す
ることができます

10
00:00:33.816 --> 00:00:36.520
列車とテストセットのすべてのオブジェクト
。

11
00:00:36.520 --> 00:00:39.760
これは、サンプリング手順が原因である可能
性があります。

12
00:00:39.760 --> 00:00:42.796
例えば、将来は年をとって、

13
00:00:42.796 --> 00:00:46.660
主催者は、データの1年間だけ私たちをエク
スポートしました。

14
00:00:46.660 --> 00:00:49.713
なので主催者が持っている元のデータで、

15
00:00:49.713 --> 00:00:54.230
この将来は一定ではありませんが、競合デー
タでは一定です。

16
00:00:54.230 --> 00:00:59.460
そして明らかに、それはモデルのために有用
ではなく、ちょうどいくつかのメモリを占有
します。

17
00:00:59.460 --> 00:01:03.739
そこで、このような定数機能を削除しようと
しています。

18
00:01:03.739 --> 00:01:07.560
この例では、ゼロのデータセット機能は一定
です。

19
00:01:07.560 --> 00:01:12.027
列車のセットでは機能が一定している場合も
ありますが、

20
00:01:12.027 --> 00:01:14.860
どのようにテストセットの異なる値です。

21
00:01:14.860 --> 00:01:19.691
繰り返しますが、このような機能を完全に削
除することをお勧めします。

22
00:01:19.691 --> 00:01:20.907
トレーニング中。

23
00:01:20.907 --> 00:01:23.861
データセット機能は f1 です。

24
00:01:23.861 --> 00:01:25.580
実際に何が問題なのですか?

25
00:01:25.580 --> 00:01:29.669
たとえば、私の新しいモデルは、この将来に
いくつかの重量を割り当てることができます
ので、

26
00:01:29.669 --> 00:01:34.189
この将来は予測式の一部となり、この式は

27
00:01:34.189 --> 00:01:38.950
その機能の新しい値を持つオブジェクトに対
しては、完全に信頼できません。

28
00:01:38.950 --> 00:01:42.040
たとえば、データセットの最後の行の場合で
す。

29
00:01:42.040 --> 00:01:47.237
J 行は、たとえカテゴリの機能は、列車の
パスに一定していないがあった

30
00:01:47.237 --> 00:01:52.760
テストデータにのみ存在する値は、この状況
を適切に処理する必要があります。

31
00:01:52.760 --> 00:01:57.283
私たちは決定する必要があります,
これらの新しい値は大いにかどうか?

32
00:01:57.283 --> 00:02:01.559
たとえば、検証セットを使用してこのような
状況をシミュレートし、

33
00:02:01.559 --> 00:02:05.546
オブジェクトの予測の品質と syn
を比較します。

34
00:02:05.546 --> 00:02:09.040
フィーチャ値と新しいフィーチャ値を持つオ
ブジェクト。

35
00:02:09.040 --> 00:02:13.757
多分我々は、機能を削除するか、多分我々が
決定する決定する

36
00:02:13.757 --> 00:02:18.403
新しいフィーチャ値を使用して、オブジェク
トに別のモデルを作成します。

37
00:02:18.403 --> 00:02:23.321
時には、これらの2つの数値機能が重複して
いる

38
00:02:23.321 --> 00:02:26.050
列は完全に同じです。

39
00:02:26.050 --> 00:02:31.444
この例のデータセットでは、これらの列は
f2 と f3 です。

40
00:02:31.444 --> 00:02:36.301
明らかに、我々は他のもの以来、これらの2
つの機能の1つだけを残す必要があります

41
00:02:36.301 --> 00:02:41.320
モデルには新しい情報を与えることはありま
せんし、トレーニングを遅くします。

42
00:02:41.320 --> 00:02:45.230
複数の機能から、2つの列が同じであるかど
うかを確認するのは簡単です。

43
00:02:45.230 --> 00:02:49.932
私達はちょうどそれらを要素の賢い比較でき
る。

44
00:02:49.932 --> 00:02:53.105
また、カテゴリ別の機能を複製することもで
きます。

45
00:02:53.105 --> 00:02:56.188
問題は、機能が同一であることができますが
、

46
00:02:56.188 --> 00:02:58.370
彼らのレベルは異なる名前を持っています。

47
00:02:58.370 --> 00:03:03.324
それは、1つの機能のレベルの名前を変更す
ることが可能です

48
00:03:03.324 --> 00:03:06.070
2つの列が同じになります。

49
00:03:06.070 --> 00:03:08.890
たとえば、f4 と f5
を備えています。

50
00:03:08.890 --> 00:03:13.618
機能のレベルの名前を変更する場合 f5、

51
00:03:13.618 --> 00:03:16.638
c から a、a から b、b から c
へ。

52
00:03:16.638 --> 00:03:20.761
結果は、機能 f4
とまったく同じように見えます。

53
00:03:20.761 --> 00:03:24.490
しかし、どのようにこのような重複機能を見
つけるのですか?

54
00:03:24.490 --> 00:03:27.251
幸い、かなり楽なのですが、

55
00:03:27.251 --> 00:03:31.543
それはそれらを見つけるためにコードの1つ
のより多くのラインだけ私達を取る。

56
00:03:31.543 --> 00:03:36.496
まず、すべてのカテゴリ機能にラベルを付け
てコーディングする必要があり、

57
00:03:36.496 --> 00:03:39.750
その後、彼らは数字であるかのようにそれら
を比較する。

58
00:03:39.750 --> 00:03:43.194
ここで最も重要な部分は、ラベルのエンコー
ドです。

59
00:03:43.194 --> 00:03:45.467
我々は正しいことをする必要があります。

60
00:03:45.467 --> 00:03:49.352
我々は、上から下への機能をエンコードする
必要がありますので、

61
00:03:49.352 --> 00:03:55.380
我々が参照してください最初のユニークな値
は、ラベル1を取得し、2番目は2を取得す
るように。

62
00:03:55.380 --> 00:03:58.557
たとえば、機能 f4 の場合は、

63
00:03:58.557 --> 00:04:03.653
我々は、1、B と2と C
と3をエンコードします。

64
00:04:03.653 --> 00:04:11.854
今機能 f5 は、異なる C
が1になりますそれをエンコードします,

65
00:04:11.854 --> 00:04:15.877
A は2と B が3になります。

66
00:04:15.877 --> 00:04:19.134
しかし、このようなエンコーディングの列
f4 と

67
00:04:19.134 --> 00:04:23.740
f5 キーが同じであることが判明し、我々
はそれらのいずれかを削除することができま
す。

68
00:04:23.740 --> 00:04:26.901
確認するもう一つの重要な事柄がある場合

69
00:04:26.901 --> 00:04:30.240
列車およびテストの重複した列はある。

70
00:04:30.240 --> 00:04:34.474
また、異なるターゲットを持っている重複し
た行の多くを書くことです

71
00:04:34.474 --> 00:04:38.197
これは、競争がルーレットのようになります
サインすることができます

72
00:04:38.197 --> 00:04:42.577
そして、我々の検証は、公共のリーダーボー
ドのスコアに異なることになり、

73
00:04:42.577 --> 00:04:45.150
民間の地位はかなりランダムになります。

74
00:04:45.150 --> 00:04:51.656
別の可能性は、重複した行は、単にミスの結
果になることができます。

75
00:04:51.656 --> 00:04:56.105
1列繰り返された競技があった10万

76
00:04:56.105 --> 00:04:58.260
トレーニングデータセットの時間。

77
00:04:58.260 --> 00:05:03.351
故意かどうかはわかりませんが、必要だった
のは

78
00:05:03.351 --> 00:05:08.840
これらの重複した行を削除して、テストセッ
トに高得点を設定します。

79
00:05:08.840 --> 00:05:11.761
とにかく、説明したほうが

80
00:05:11.761 --> 00:05:16.673
なぜ我々はこのような重複した行を観察する
のですか?

81
00:05:16.673 --> 00:05:19.646
これは、実際にはデータの理解の一部です。

82
00:05:19.646 --> 00:05:23.790
我々はまた、列車とテストが共通の行を持っ
ているかどうかを確認してください。

83
00:05:23.790 --> 00:05:28.890
場合によっては、データセット生成プロセス
について何かを伝えることができます。

84
00:05:28.890 --> 00:05:35.820
そして、再び我々はおそらく、これらの重複
の理由かもしれないと思う必要があります?

85
00:05:35.820 --> 00:05:39.166
我々が行うことができますもう一つは、我々
は手動でラベルを設定することができます

86
00:05:39.166 --> 00:05:42.090
列車セットに存在するテスト行。

87
00:05:42.090 --> 00:05:47.199
最後に、データセットがシャッフルされてい
ることを確認すると非常に便利です。

88
00:05:47.199 --> 00:05:52.600
それがなければ、データ漏洩を見つける高い
チャンスがあるので。

89
00:05:52.600 --> 00:05:57.348
我々は、後で日付の漏出についての特別なト
ピックがありますが、

90
00:05:57.348 --> 00:06:01.210
ここでは、データがシャッフルされることに
ついて説明します。

91
00:06:01.210 --> 00:06:06.990
できることは、フィーチャまたはターゲット
ベクトルと行インデックスを接続できること
です。

92
00:06:06.990 --> 00:06:12.080
我々は、オプションで実行平均を使用して値
を滑らかにすることができます。

93
00:06:12.080 --> 00:06:17.186
このスライドでは、ペアの競争から目標値を
ローリング

94
00:06:17.186 --> 00:06:22.300
は、平均目標値が破線の青色の線で示されて
いる間にプロットされます。

95
00:06:22.300 --> 00:06:26.965
データが正しくシャッフルされた場合、我々
はいくつかの種類の発振を期待するだろう

96
00:06:26.965 --> 00:06:30.210
平均ターゲット値の周りのターゲット値の。

97
00:06:30.210 --> 00:06:35.004
でもこの場合、電車のセットの端っこの方が
ずっと見えるようで

98
00:06:35.004 --> 00:06:39.150
開始とは異なる、我々はいくつかのパターン
があります。

99
00:06:39.150 --> 00:06:42.827
多分この特定のプロットからの情報は私達の
モデルを進めない。

100
00:06:42.827 --> 00:06:46.199
しかし、もう一度、我々の説明を見つける必
要があります

101
00:06:46.199 --> 00:06:48.860
我々が観察するすべての異常なもの。

102
00:06:48.860 --> 00:06:54.250
たぶん最終的には、我々は最初の場所に私た
ちをリードする何かを見つけるでしょう。

103
00:06:54.250 --> 00:06:57.624
最後に、私はあなたにもう一つの時間を奨励
したい

104
00:06:57.624 --> 00:07:00.847
データセット内の可能なすべてのものを視覚
化します。

105
00:07:00.847 --> 00:07:04.670
視覚エフェクトは、魔法の機能につながる。

106
00:07:04.670 --> 00:07:08.040
これがこのレッスンの最後のスライドです。

107
00:07:08.040 --> 00:07:12.760
ホープは、何か新しいことを学んだし、それ
について興奮。

108
00:07:12.760 --> 00:07:15.930
ここでは、我々が議論したトピックの全体の
リストです。

109
00:07:15.930 --> 00:07:17.825
あなたはこのビデオを一時停止することがで
きます

110
00:07:17.825 --> 00:07:21.546
私たちが話していたことと場所を覚えてみて
ください。

111
00:07:21.546 --> 00:07:23.113
じゃあ、また。

112
00:07:23.113 --> 00:07:33.113
音楽

