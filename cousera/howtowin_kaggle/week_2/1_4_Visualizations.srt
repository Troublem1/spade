1
00:00:03.150 --> 00:00:09.585
以前のビデオでは、匿名の機能をデコードし
、その種類を推測してみました。

2
00:00:09.585 --> 00:00:11.365
実際、私たちはもっとやりたいと思っていま
す。

3
00:00:11.365 --> 00:00:15.860
我々は、新しい機能を生成し、データ内の洞
察を見つけるためにします。

4
00:00:15.860 --> 00:00:17.440
このレッスンでは、

5
00:00:17.440 --> 00:00:21.445
我々はそれを私たちを助けることができる様
々な視覚化についてお話します。

6
00:00:21.445 --> 00:00:26.518
我々は、個々の機能を探るために我々が描く
ことができますどのようなプロットを最初に
表示されます

7
00:00:26.518 --> 00:00:30.230
そして、我々は、機能関係の探査に取得しま
す。

8
00:00:30.230 --> 00:00:36.065
まずペアを調べてから、データセット内のフ
ィーチャグループを検索します。

9
00:00:36.065 --> 00:00:40.730
まず、どのようにデータの興味深いものを見
つけるのレシピはありません。

10
00:00:40.730 --> 00:00:44.475
あなただけのデータテーブルをよく見ていく
つかの時間を費やす必要があります

11
00:00:44.475 --> 00:00:46.255
それを印刷し、調べる。

12
00:00:46.255 --> 00:00:48.295
何か面白いものが見つかったら

13
00:00:48.295 --> 00:00:50.600
その後、詳しく見てみることができます。

14
00:00:50.600 --> 00:00:53.285
だから、江田は一種の芸術であり、

15
00:00:53.285 --> 00:00:58.980
しかし、我々は今議論しますそれのためのツ
ールの束を持っています。

16
00:00:58.980 --> 00:01:01.850
最初に、我々はヒストグラムを構築すること
ができます。

17
00:01:01.850 --> 00:01:08.685
ヒストグラムは、フィーチャエッジをビンに
分割し、各ビンにどのように多くのポイント
が落下するかを示します。

18
00:01:08.685 --> 00:01:12.343
ヒストグラムは、場合によっては誤解を招く
可能性があることに注意

19
00:01:12.343 --> 00:01:14.895
従ってそれを使用するとき大箱の数を上書き
することを試みなさい。

20
00:01:14.895 --> 00:01:18.363
また、データに集約していることを知り、

21
00:01:18.363 --> 00:01:19.520
だから我々は見ることができない

22
00:01:19.520 --> 00:01:25.325
たとえば、すべての値が一意であるか、また
は繰り返される値が多い場合です。

23
00:01:25.325 --> 00:01:27.050
他の例で見てみましょう。

24
00:01:27.050 --> 00:01:32.375
私がここで説明したいと思う最初の事はヒス
トグラムが混同できることである。

25
00:01:32.375 --> 00:01:33.865
このヒストグラムを見ると、

26
00:01:33.865 --> 00:01:38.190
我々はおそらく、この機能にはゼロの値がた
くさんあると思うことができます。

27
00:01:38.190 --> 00:01:42.695
しかし、実際には、我々は値の対数を取ると
、再びヒストグラムを構築する場合、

28
00:01:42.695 --> 00:01:45.085
我々は明らかに分布が表示されます

29
00:01:45.085 --> 00:01:49.655
非縮退と1つよりも多くの異なる値がありま
す。

30
00:01:49.655 --> 00:01:54.690
だから私のポイントは、1つのプロットに基
づいて結論を下すことはありません。

31
00:01:54.690 --> 00:01:56.390
仮説があるなら

32
00:01:56.390 --> 00:01:59.765
それを証明するためにいくつかの異なるプロ
ットを作成してみてください。

33
00:01:59.765 --> 00:02:02.995
ここで2番目に興味深いことは、ピークです
。

34
00:02:02.995 --> 00:02:04.920
それはなんですか。

35
00:02:04.920 --> 00:02:10.070
これは、ピークがこの機能の平均値に正確に
位置していることが判明した。

36
00:02:10.070 --> 00:02:14.830
主催者のように私たちのための平均値を持つ
欠落値を満たしているようだ。

37
00:02:14.830 --> 00:02:19.440
だから、今は価値観がもともと欠落していた
ことを理解する。

38
00:02:19.440 --> 00:02:20.985
どのようにこの情報を使用できますか?

39
00:02:20.985 --> 00:02:26.400
見つからない値は、数値ではなく、ヌルで再
び置き換えることができます。

40
00:02:26.400 --> 00:02:31.000
たとえば、[聞き取れない] には、欠落し
た値を独自に入力できる特殊なアルゴリズム
があります。

41
00:02:31.000 --> 00:02:35.890
たぶん [聞こえない] は、明示的に欠落
している値の恩恵を受ける。

42
00:02:35.890 --> 00:02:40.780
または我々は、機能の平均以外の何かで不足
している値を埋めることができます

43
00:02:40.780 --> 00:02:44.670
たとえば、-999 を使用します。

44
00:02:44.670 --> 00:02:50.380
または、我々は、値が欠落していたことを示
す新しい機能を生成することができます。

45
00:02:50.380 --> 00:02:54.630
これは、線形モデルに特に役立ちます。

46
00:02:54.630 --> 00:02:57.583
我々はまた、プロットを構築することができ
ます X 軸上で、

47
00:02:57.583 --> 00:02:58.980
我々は、行のインデックスを持っている

48
00:02:58.980 --> 00:03:02.940
Y 軸には特徴値があります。

49
00:03:02.940 --> 00:03:05.430
ポイントを接続しないと便利です。

50
00:03:05.430 --> 00:03:08.960
線分は円でのみ描画します。

51
00:03:08.960 --> 00:03:12.435
この種のプロットで水平線を観察すると

52
00:03:12.435 --> 00:03:17.100
我々は、この機能で繰り返される値がたくさ
んあることを理解しています。

53
00:03:17.100 --> 00:03:21.618
また、インデックスのランダム性に注意して
ください。

54
00:03:21.618 --> 00:03:24.880
つまり、我々はいくつかの水平方向のパター
ンが、垂直方向のものを参照してください。

55
00:03:24.880 --> 00:03:27.690
これは、データが適切にシャッフルされるこ
とを意味します。

56
00:03:27.690 --> 00:03:32.225
また、ラベルに従ってポイントを色分けする
こともできます。

57
00:03:32.225 --> 00:03:35.240
ここでは、我々は、機能が非常に参照してく
ださい

58
00:03:35.240 --> 00:03:38.510
それはおそらく素敵なクラスの分離を与える
ように良い。

59
00:03:38.510 --> 00:03:42.665
また、我々は明らかにデータがここでシャッ
フルされていないことがわかります。

60
00:03:42.665 --> 00:03:45.925
これは、実際には、クラスのラベルでソート
されます。

61
00:03:45.925 --> 00:03:50.675
パンダの記述機能を使って統計を調べると便
利です。

62
00:03:50.675 --> 00:03:54.030
あなたは、スクリーンショットでその出力の
例を見ることができます。

63
00:03:54.030 --> 00:03:56.145
それはあなたの平均についての情報を与える

64
00:03:56.145 --> 00:04:00.210
標準偏差、およびフィーチャ分布のいくつか
のパーセンタイル。

65
00:04:00.210 --> 00:04:03.480
もちろん、これらの統計情報を手動で計算す
ることもできます。

66
00:04:03.480 --> 00:04:05.235
パンダのナンタイプでは、

67
00:04:05.235 --> 00:04:08.330
計算する統計によって名付けられた関数を見
つけることができます。

68
00:04:08.330 --> 00:04:11.460
平均値のための平均、分散のための
var、

69
00:04:11.460 --> 00:04:15.790
などとありますが、一度に全部持っていると
本当に便利です。

70
00:04:15.790 --> 00:04:20.505
そして最後に、我々はすでに前のビデオで説
明したように、

71
00:04:20.505 --> 00:04:23.225
調べる value_counts
機能がある

72
00:04:23.225 --> 00:04:27.010
個別のフィーチャ値の出現回数

73
00:04:27.010 --> 00:04:29.780
関数が null の場合、

74
00:04:29.780 --> 00:04:32.795
これは、データ内の欠落している値を見つけ
るのに役立ちます。

75
00:04:32.795 --> 00:04:38.125
たとえば、表示されている図のように、デー
タ内の null
パターンを視覚化できます。

76
00:04:38.125 --> 00:04:42.120
そこで、ここでは、我々が議論した関数の完
全なリストです。

77
00:04:42.120 --> 00:04:44.350
あなたがそれらのそれぞれを覚えていること
を確認します。

78
00:04:44.350 --> 00:04:48.745
ここでは、個々の機能の視覚化について説明
しました。

79
00:04:48.745 --> 00:04:52.640
そして今、我々の議論の次のトピックに取得
しましょう

80
00:04:52.640 --> 00:04:55.500
フィーチャー関係の探査。

81
00:04:55.500 --> 00:04:57.760
それは時々、それが判明

82
00:04:57.760 --> 00:05:01.055
一度に1つの機能を見て結論を出すのは難し
い。

83
00:05:01.055 --> 00:05:03.630
だから、ペアを見てみましょう。

84
00:05:03.630 --> 00:05:06.560
ここでのベスト2は散布図です。

85
00:05:06.560 --> 00:05:11.700
これにより、1つの値のシーケンスを別の1
つに描画できます。

86
00:05:11.700 --> 00:05:15.785
そして、通常、我々は別の機能対1つの機能
をプロットします。

87
00:05:15.785 --> 00:05:18.600
したがって、図の各点はオブジェクトに対応
します。

88
00:05:18.600 --> 00:05:22.355
点の位置によって示される特徴値を使って。

89
00:05:22.355 --> 00:05:24.110
分類タスクの場合は、

90
00:05:24.110 --> 00:05:28.655
この写真のようにラベルを付けてポイントを
色分けすると便利です。

91
00:05:28.655 --> 00:05:31.725
色は、オブジェクトのクラスを示します。

92
00:05:31.725 --> 00:05:35.870
回帰については、ヒートマップのライトカラ
ーリングも使用できます。

93
00:05:35.870 --> 00:05:40.870
あるいは、ターゲット値をポイントサイズで
視覚化することもできます。

94
00:05:40.870 --> 00:05:44.215
散布図を効果的に使用して、

95
00:05:44.215 --> 00:05:48.840
列車とテストセットのデータ分布は同じです
。

96
00:05:48.840 --> 00:05:52.575
この例では、赤色の点はクラス0に対応して
います。

97
00:05:52.575 --> 00:05:55.605
そしてクラス1への青いポイント。

98
00:05:55.605 --> 00:05:58.020
そして、赤と青のポイントの上に、

99
00:05:58.020 --> 00:05:59.655
我々は、グレーポイントを参照してください
。

100
00:05:59.655 --> 00:06:01.990
テストセットに対応します。

101
00:06:01.990 --> 00:06:04.615
テストセットのラベルがありません

102
00:06:04.615 --> 00:06:06.455
だからこそ、彼らは灰色です。

103
00:06:06.455 --> 00:06:13.475
そして、我々は明らかに赤い点は、灰色のも
のの一部と混合されていることがわかります

104
00:06:13.475 --> 00:06:15.240
そして、それは実際に良いです。

105
00:06:15.240 --> 00:06:18.530
しかし、他の灰色のポイントは、地域に位置
しています

106
00:06:18.530 --> 00:06:22.600
我々は、トレーニングデータを持っていない
ところ、それは悪いです。

107
00:06:22.600 --> 00:06:27.295
色とグレーのポイント分布の間に何らかの不
一致がある場合は、

108
00:06:27.295 --> 00:06:31.165
あなたが正しいことをやっている場合は、お
そらく停止し、考える必要があります。

109
00:06:31.165 --> 00:06:33.025
これは、コード内の単なるバグである可能性
があります

110
00:06:33.025 --> 00:06:35.965
またはそれは完全に overfitted
機能することができます

111
00:06:35.965 --> 00:06:40.005
または確かに健康ではない何か他のもの。

112
00:06:40.005 --> 00:06:42.125
さて、この散布図を見てみましょう。

113
00:06:42.125 --> 00:06:46.555
と言うと、我々は機能 X1 対機能 X2
をプロットします。

114
00:06:46.555 --> 00:06:50.440
我々は彼らの関係について何を言うことがで
きる?

115
00:06:50.440 --> 00:06:56.040
正解は X2 が
one_minus_X1
より少ないか等しいかです。

116
00:06:56.040 --> 00:07:01.895
斜めの線のための同等化が X1 + X2
= 1
であることをちょうど実現しなさい、

117
00:07:01.895 --> 00:07:04.895
そして、行の下のすべてのポイントについて
は、

118
00:07:04.895 --> 00:07:09.310
X2 は one_minus_X1
より小さいか等しい。

119
00:07:09.310 --> 00:07:13.550
そこで、この2つの機能の関係を見つけたと
します。

120
00:07:13.550 --> 00:07:15.235
どのように我々はこの事実を使用するのです
か?

121
00:07:15.235 --> 00:07:17.315
もちろん、それにもよりますが、

122
00:07:17.315 --> 00:07:20.370
しかし、少なくともいくつかの明白な機能を
生成することです。

123
00:07:20.370 --> 00:07:24.065
ツリーベースのモデルについては、我々のよ
うな新しい機能を作成することができます

124
00:07:24.065 --> 00:07:28.220
X1 と X2 の間の差または比率。

125
00:07:28.220 --> 00:07:30.530
さて、この散布図を見てみましょう。

126
00:07:30.530 --> 00:07:35.690
特徴の真の関係とは何かを言うのは難しいで
すが、結局、

127
00:07:35.690 --> 00:07:38.555
私たちの目標は、ここでデータをデコードす
ることではなく、

128
00:07:38.555 --> 00:07:42.890
新しい機能を生成し、より良いスコアを取得
します。

129
00:07:42.890 --> 00:07:48.100
そして、このプロットは私たちのアイデアを
どのようにこれらの2つの機能の機能を生成
することができます。

130
00:07:48.100 --> 00:07:50.270
我々は、画像上のいくつかの三角形を参照し
てください

131
00:07:50.270 --> 00:07:55.530
だから我々は、おそらく特定のポイントが属
している各三角形に機能を作ることができる

132
00:07:55.530 --> 00:07:58.695
そして、この機能が役立つことを願っていま
す。

133
00:07:58.695 --> 00:08:00.940
機能の数が少ない場合は、

134
00:08:00.940 --> 00:08:03.940
すべての一対の散布図を一度にプロットする
ことができます。

135
00:08:03.940 --> 00:08:09.080
パンダから散布指標機能を使用します。それ
はかなり便利です。

136
00:08:09.080 --> 00:08:13.130
また、目の前にヒストグラムと散布プロット
を持っているのはいいことだ

137
00:08:13.130 --> 00:08:17.925
散布図と同じ時間は、密度についての非常に
あいまいな情報を与える

138
00:08:17.925 --> 00:08:22.220
ヒストグラムは機能の相互作用を示していま
せん。

139
00:08:22.220 --> 00:08:26.465
我々はまた、列の間の距離のいくつかの種類
を計算することができます

140
00:08:26.465 --> 00:08:28.820
当社の機能テーブルとに格納する

141
00:08:28.820 --> 00:08:32.495
多数のフィーチャによるフィーチャのサイズ
数の行列。

142
00:08:32.495 --> 00:08:35.965
たとえば、カウント間の相関関係を計算でき
ます。

143
00:08:35.965 --> 00:08:40.970
これは、人々が構築する行列の最も一般的な
タイプです, 相関メトリック.

144
00:08:40.970 --> 00:08:44.300
しかし、我々は相関よりも他のものを計算す
ることができます。

145
00:08:44.300 --> 00:08:49.605
たとえば、1つの機能が他のフィーチャより
も大きい回数を示します。

146
00:08:49.605 --> 00:08:53.150
私は、どのように多くの行は、そのような値
を意味する

147
00:08:53.150 --> 00:08:57.850
最初の機能は、2番目の特徴の値よりも大き
いですか?

148
00:08:57.850 --> 00:09:00.955
または別の例は、我々は計算することができ
ます

149
00:09:00.955 --> 00:09:05.195
データセット内で機能が持つ個別の組み合わ
せの数。

150
00:09:05.195 --> 00:09:08.545
このようなカスタム関数では、

151
00:09:08.545 --> 00:09:10.450
我々は、手動でメトリックを構築する必要が
あります

152
00:09:10.450 --> 00:09:12.490
そして、我々はから matshow
関数を使用することができます

153
00:09:12.490 --> 00:09:16.440
Matplotlib はあなたが見るスラ
イドのようにそれを視覚化するために。

154
00:09:16.440 --> 00:09:20.630
メトリックは、ここでのような合計混乱のよ
うに見える場合は、

155
00:09:20.630 --> 00:09:24.020
我々は、K-平均クラスタリングのようなク
ラスタリングのいくつかの種類を実行するこ
とができます

156
00:09:24.020 --> 00:09:28.480
この行列の行と列で、フィーチャの順序を変
更します。

157
00:09:28.480 --> 00:09:29.985
この方がよさそうだね?

158
00:09:29.985 --> 00:09:38.030
我々は実際に我々の議論の最後のトピックに
来た、機能グループ。

159
00:09:38.030 --> 00:09:40.000
そしてそれは我々がここで見るものです。

160
00:09:40.000 --> 00:09:43.250
非常に類似した機能のグループがあり、通常
、

161
00:09:43.250 --> 00:09:47.435
グループに基づいて新しい機能を生成するこ
とをお勧めします。

162
00:09:47.435 --> 00:09:50.660
繰り返しますが、それは依存するかもしれな
いいくつかの統計

163
00:09:50.660 --> 00:09:54.485
グループを介して照合できる機能として正常
に動作します。

164
00:09:54.485 --> 00:09:58.800
フィーチャグループの検索に役立つもう1つ
の視覚化は、

165
00:09:58.800 --> 00:10:03.529
次の:
我々は、各機能の統計情報を計算する

166
00:10:03.529 --> 00:10:04.838
たとえば、平均値、

167
00:10:04.838 --> 00:10:08.455
、列インデックスに対してプロットします。

168
00:10:08.455 --> 00:10:12.175
このプロットは、列がシャッフルされている
場合、かなりランダムに見えることがありま
す。

169
00:10:12.175 --> 00:10:16.690
では、この統計に基づいて列を並べ替えると
どうでしょうか。

170
00:10:16.690 --> 00:10:18.720
特徴および平均、この場合。

171
00:10:18.720 --> 00:10:21.085
うまくいったようだ

172
00:10:21.085 --> 00:10:23.610
我々は明確にここにグループを参照してくだ
さい。

173
00:10:23.610 --> 00:10:26.760
だから、今我々は、各グループに近い見てみ
ることができます

174
00:10:26.760 --> 00:10:30.915
新しい機能を生成するために想像力を使用し
ます。

175
00:10:30.915 --> 00:10:34.455
ここでは、先ほど説明したすべての機能の一
覧を示します。

176
00:10:34.455 --> 00:10:39.010
ビデオを一時停止し、我々が見た例を覚えて
いるかどうかを確認します。

177
00:10:39.010 --> 00:10:41.410
だから、最後にこのビデオでは、

178
00:10:41.410 --> 00:10:46.603
我々は、ツールやデータの探査に役立つ機能
について話している。

179
00:10:46.603 --> 00:10:49.780
たとえば、1つずつ機能を探索するには、

180
00:10:49.780 --> 00:10:51.240
我々は、ヒストグラムを使用することができ
ます

181
00:10:51.240 --> 00:10:55.110
プロットは、我々はまた、統計情報を調べる
ことができます。

182
00:10:55.110 --> 00:10:58.080
フィーチャ間の関係を調べるには、

183
00:10:58.080 --> 00:11:00.125
最適なツールは散布図です。

184
00:11:00.125 --> 00:11:05.760
散布メトリックは、複数の散布図とヒストグ
ラムを1つの図形に結合します。

185
00:11:05.760 --> 00:11:10.565
相関プロットは、機能がどのように類似して
いるかを理解するのに役立ちます。

186
00:11:10.565 --> 00:11:13.980
相関メトリックスの列と行を並べ替える場合
は、

187
00:11:13.980 --> 00:11:16.425
おそらく、機能グループが見つかります。

188
00:11:16.425 --> 00:11:20.450
および機能グループは、このレッスンで説明
した最後のトピックでした。

189
00:11:20.450 --> 00:11:30.175
また、並べ替えられたフィーチャ統計のプロ
ットや、フィーチャグループとしてどのよう
に表示できるかも見ました。

190
00:11:30.175 --> 00:11:34.385
もちろん、参考になるプロットのほんの一部
しか議論していません。

191
00:11:34.385 --> 00:11:40.120
実際には、開発し、独自のツールをさらに探
査を見つける。

