1
00:00:03.100 --> 00:00:10.589
このビデオでは、我々が通過し、すなわち、
いくつかの重要なステップを打破するよ、最
初の、

2
00:00:10.589 --> 00:00:13.310
ドメインナレッジステップの取得, 2
番目,

3
00:00:13.310 --> 00:00:15.530
データが直感的であるかどうかを確認する

4
00:00:15.530 --> 00:00:20.350
最後に、データがどのように生成されたかを
理解します。

5
00:00:20.350 --> 00:00:21.805
最初のステップから始めましょう

6
00:00:21.805 --> 00:00:23.740
ドメインの知識を取得する。

7
00:00:23.740 --> 00:00:27.135
Kaggle
でホストされている計算を見てみると、

8
00:00:27.135 --> 00:00:29.420
まあ、あなたは、彼らはかなり多様であるこ
とがわかります。

9
00:00:29.420 --> 00:00:32.832
場合によっては、我々は3次元ボディスキャ
ンの脅威を検出する必要があります

10
00:00:32.832 --> 00:00:36.240
または不動産価格を予測する、

11
00:00:36.240 --> 00:00:38.980
または衛星画像を分類します。

12
00:00:38.980 --> 00:00:43.740
計算は、我々はほとんど何も知っている非常
に特定のトピックにすることができます

13
00:00:43.740 --> 00:00:46.655
つまり、我々は、ドメインの知識を持ってい
ない。

14
00:00:46.655 --> 00:00:49.165
通常、我々はあまりにもフィールドの奥深く
に行く必要はありません

15
00:00:49.165 --> 00:00:52.365
目的を理解するのが望ましい

16
00:00:52.365 --> 00:00:53.625
どのようなデータを我々は、

17
00:00:53.625 --> 00:00:58.190
そして、どのように人々は通常、ベースライ
ンを構築するために、この種の問題に取り組
む。

18
00:00:58.190 --> 00:01:01.980
だから、私たちの最初のステップは、おそら
くトピックを検索する必要があります

19
00:01:01.980 --> 00:01:07.360
ウィキペディア内でグーグル、そして我々は
データを理解していることを確認します。

20
00:01:07.360 --> 00:01:09.770
例えば、我々が始めるとしましょう

21
00:01:09.770 --> 00:01:14.065
我々は広告主のコストを予測する必要がある
新しい計算。

22
00:01:14.065 --> 00:01:19.635
私たちの最初のステップは、計算は、web
広告についてです実現することです。

23
00:01:19.635 --> 00:01:22.275
列名を探して検索すると、

24
00:01:22.275 --> 00:01:23.490
任意の検索エンジンを使用して、

25
00:01:23.490 --> 00:01:28.235
我々は、データが Google アドワー
ズ広告システムからエクスポートされたこと
を理解する。

26
00:01:28.235 --> 00:01:31.365
と Google アドワーズ広告に関する
いくつかの記事を読んだ後、

27
00:01:31.365 --> 00:01:33.375
我々は、列の意味を取得します。

28
00:01:33.375 --> 00:01:36.390
私たちは今、インプレッション列の数字が含
まれて知っている

29
00:01:36.390 --> 00:01:40.050
特定の広告がユーザーの前に現われた時の、

30
00:01:40.050 --> 00:01:45.575
をクリックすると、ユーザーによって広告が
クリックされた回数が、

31
00:01:45.575 --> 00:01:49.070
そして当然、クリックの数はより少なくべき
である

32
00:01:49.070 --> 00:01:52.328
または印象の数よりも等しい。

33
00:01:52.328 --> 00:01:57.355
このビデオでは、このデータセットの詳細に
ついては詳しく説明しませんが、

34
00:01:57.355 --> 00:02:02.540
しかし、あなたはより詳細な探査のための補
足読み物を開くことができます。

35
00:02:02.540 --> 00:02:05.390
我々はいくつかのドメインの知識を学んだ後
、

36
00:02:05.390 --> 00:02:08.720
データセット内の値が直感的であるかどうか
を確認する必要があります。

37
00:02:08.720 --> 00:02:11.910
と私たちのドメインの知識に同意します。

38
00:02:11.910 --> 00:02:15.270
たとえば、年齢データを含む列がある場合は
、

39
00:02:15.270 --> 00:02:18.945
我々は、値が100よりも大きくなることは
めったに期待する必要があります。

40
00:02:18.945 --> 00:02:22.430
そして確かに、誰もこれまで以上200年住
んでいた。

41
00:02:22.430 --> 00:02:26.150
したがって、値は200よりも小さくする必
要があります。

42
00:02:26.150 --> 00:02:31.280
しかし、何らかの理由で、我々はこの超巨大
な値336を見つける。

43
00:02:31.280 --> 00:02:36.810
最もおそらく、単にタイプミスですが、それ
は36または33する必要があります

44
00:02:36.810 --> 00:02:39.860
そして、我々ができる最善のことは手動でそ
れを修正することです。

45
00:02:39.860 --> 00:02:44.205
しかし、他の可能性は、そのない人間の年齢
は、

46
00:02:44.205 --> 00:02:50.700
しかし、それは完全に300年以上生きるこ
とが正常であるいくつかのエイリアンの年齢
。

47
00:02:50.700 --> 00:02:55.485
それを確認するには、我々はおそらく1つ以
上の時間を、フォーラムで尋ねるデータの説
明を読む必要があります。

48
00:02:55.485 --> 00:02:57.570
たぶん、データは完全に正しいですが、

49
00:02:57.570 --> 00:02:59.970
それを誤解してる

50
00:02:59.970 --> 00:03:03.890
今、google アドワーズ広告のデータ
セットを見てみましょう。

51
00:03:03.890 --> 00:03:08.190
我々は、クリック変数の値が必要であること
を理解

52
00:03:08.190 --> 00:03:12.003
[インプレッション]
列の値よりも小さいか等しい。

53
00:03:12.003 --> 00:03:14.050
我々の場合は最初の列で

54
00:03:14.050 --> 00:03:16.835
我々は、ゼロインプレッションと3クリッカ
ーを参照してください。

55
00:03:16.835 --> 00:03:18.990
それは虫のように聞こえるでしょ?

56
00:03:18.990 --> 00:03:20.745
実際には、それはおそらく、

57
00:03:20.745 --> 00:03:24.665
しかし人の年齢の例に別様に、

58
00:03:24.665 --> 00:03:27.135
それはむしろによって作られた通常のエラー
かもしれない

59
00:03:27.135 --> 00:03:30.510
いずれかのデータエクスポートスクリプトま
たは別の種類のアルゴリズム。

60
00:03:30.510 --> 00:03:33.900
つまり、エラーがランダムに行われていない
、

61
00:03:33.900 --> 00:03:39.630
しかし、そこには、特定の場所にエラーがあ
るのロジックのいくつかの種類があります。

62
00:03:39.630 --> 00:03:44.850
それはこれらの間違いがよりよいスコアを得
るのに使用することができることを意味する
。

63
00:03:44.850 --> 00:03:46.860
例えば、私たちの場合、

64
00:03:46.860 --> 00:03:48.390
我々は、新しい機能を作成することが

65
00:03:48.390 --> 00:03:52.450
is_incorrect、エラーのあるす
べての行をマークします。

66
00:03:52.450 --> 00:03:56.490
おそらく、我々のモデルは、この機能が役に
立つでしょう。

67
00:03:56.490 --> 00:04:00.683
また、データがどのように生成されたかを理
解することも非常に重要です。

68
00:04:00.683 --> 00:04:04.670
データベースからオブジェクトをサンプリン
グするアルゴリズムは何でしたか。

69
00:04:04.670 --> 00:04:07.780
たぶん、ホストのサンプルは、ランダムにオ
ブジェクトを取得する

70
00:04:07.780 --> 00:04:10.840
または彼らは、特定のクラス、つまり、オー
バーサンプル

71
00:04:10.840 --> 00:04:14.075
それらはそのクラスのより多くの例を生成し
ました。

72
00:04:14.075 --> 00:04:17.555
たとえば、データセットをより多くのクラス
のバランスをとるようにします。

73
00:04:17.555 --> 00:04:20.905
実際には、データが生成された方法を知って
いる場合にのみ、

74
00:04:20.905 --> 00:04:25.009
モデルに対して適切な検証スキームを設定で
きます。

75
00:04:25.009 --> 00:04:28.020
正しい検証パイプラインのために来ることは
重要である、

76
00:04:28.020 --> 00:04:31.050
そして、このコースで後ほど説明します。

77
00:04:31.050 --> 00:04:35.318
では、生成プロセスについて何を知ることが
できるでしょうか。

78
00:04:35.318 --> 00:04:37.025
例えば、我々は見つけることができる

79
00:04:37.025 --> 00:04:41.380
列車およびテストセットは異なったアルゴリ
ズムと生成された。

80
00:04:41.380 --> 00:04:44.350
そして、テストセットが列車セットと異なる
場合、

81
00:04:44.350 --> 00:04:47.710
列車セットの一部を検証セットとして使用す
ることはできません。

82
00:04:47.710 --> 00:04:51.920
この部分はテストセットの代表ではないので
。

83
00:04:51.920 --> 00:04:55.735
したがって、我々はそれを使用してモデルを
評価することはできません。

84
00:04:55.735 --> 00:04:59.180
だからもう一度、正しい検証を設定するには
、

85
00:04:59.180 --> 00:05:02.775
基礎となるデータ生成プロセスを知る必要が
あります。

86
00:05:02.775 --> 00:05:06.075
広告の計算では、我々は前に、議論した

87
00:05:06.075 --> 00:05:08.934
別の列車のテストのサンプリングのすべての
症状。

88
00:05:08.934 --> 00:05:10.920
検証セットでのモデルの改善

89
00:05:10.920 --> 00:05:14.135
改善された公共のリーダーボードのスコアに
はなりませんでした。

90
00:05:14.135 --> 00:05:20.105
さらに、リーダーボードのスコアは、検証ス
コアよりも意外に高かった。

91
00:05:20.105 --> 00:05:24.930
何が起きているのかを理解しようとしながら
色々なことも映像化していましたが、

92
00:05:24.930 --> 00:05:30.195
そして、毎回、列車セットのプロットは、テ
ストセットのプロットと大いに異なっていた
。

93
00:05:30.195 --> 00:05:35.645
列車とテストセットが類似していた場合、こ
れも発生することができませんでした。

94
00:05:35.645 --> 00:05:39.105
そして最後に、それは疑っていたが

95
00:05:39.105 --> 00:05:43.256
電車期間は試験期間より10倍以上大きかっ
たのですが、

96
00:05:43.256 --> 00:05:46.414
列車のセットははるかに少ない行を持ってい
た。

97
00:05:46.414 --> 00:05:47.790
まっすぐ進むことはなかったのですが、

98
00:05:47.790 --> 00:05:51.205
しかし、左の図のこの三角形は、私のための
手がかりだった

99
00:05:51.205 --> 00:05:53.385
パズルが解けた

100
00:05:53.385 --> 00:05:56.005
テストセットに合わせてセットした列車を調
整しました。

101
00:05:56.005 --> 00:05:58.255
検証スコアは信頼性の高いものとなり、

102
00:05:58.255 --> 00:06:00.465
そして、モデリングを開始することができま
す。

103
00:06:00.465 --> 00:06:06.365
すべてのタスクの説明と調査は、文書に記載
された資料で確認できます。

104
00:06:06.365 --> 00:06:07.695
だから、このビデオでは、

105
00:06:07.695 --> 00:06:11.675
いくつかの重要な探索手順について説明しま
した。

106
00:06:11.675 --> 00:06:15.260
まず、タスクに関するドメインナレッジを取
得する必要があります。

107
00:06:15.260 --> 00:06:18.943
これは、より良い問題とデータを理解するの
に役立ちます。

108
00:06:18.943 --> 00:06:21.685
次に、データが直感的であるかどうかを確認
する必要があります。

109
00:06:21.685 --> 00:06:24.755
と私たちのドメインの知識に同意します。

110
00:06:24.755 --> 00:06:27.850
そして最後に、それはどのように理解する必
要があります

111
00:06:27.850 --> 00:06:31.105
それ以外の場合は、データが主催者によって
生成された

112
00:06:31.105 --> 00:06:35.570
我々は、我々のモデルの適切な検証を確立す
ることはできません。

