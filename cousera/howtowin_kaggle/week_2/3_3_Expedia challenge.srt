1
00:00:03.310 --> 00:00:06.950
ねえ皆さん。このビデオでは、

2
00:00:06.950 --> 00:00:09.515
私とチームメートの様子をお伝えしますと、

3
00:00:09.515 --> 00:00:15.045
スタニスラフスミルノフは Kaggle 
エクスペディアホテルの推奨競争を解決しま
した。

4
00:00:15.045 --> 00:00:17.405
個人的に、私のお気に入りの一つは、

5
00:00:17.405 --> 00:00:23.750
おそらく私が今までに参加したトップ5の最
も興味深い大会の中で

6
00:00:23.750 --> 00:00:25.420
私は今問題を述べる。

7
00:00:25.420 --> 00:00:29.045
だから、あなたがここに右のデータリークの
レッスンの直後に来た場合、

8
00:00:29.045 --> 00:00:31.940
それは既にあなたに精通している必要があり
ます。

9
00:00:31.940 --> 00:00:34.700
とにかく、その競争の中で、

10
00:00:34.700 --> 00:00:37.740
我々は、顧客の行動の多くで働いた。

11
00:00:37.740 --> 00:00:40.925
これらは、お客様が検索を含む

12
00:00:40.925 --> 00:00:45.005
検索結果、クリック数、または書籍との対話
方法

13
00:00:45.005 --> 00:00:48.200
そして、検索結果が旅行パッケージだったか
どうか、

14
00:00:48.200 --> 00:00:55.790
とエクスペディアは、ユーザーが予約しよう
としているホテルのグループを予測すること
に興味を持っていた。

15
00:00:55.790 --> 00:01:00.810
ここで重要なことは、ホテルグループの予測
対象です。

16
00:01:00.810 --> 00:01:06.315
言い換えれば、実際のホテルの特徴は、それ
を覚えている。

17
00:01:06.315 --> 00:01:09.890
それが判明したとして、この競争は非常に

18
00:01:09.890 --> 00:01:14.225
データリークを悪用するには、非常に困難な
非自明。

19
00:01:14.225 --> 00:01:15.980
一見したところから、

20
00:01:15.980 --> 00:01:18.575
データリークは非常に簡単でした。

21
00:01:18.575 --> 00:01:22.430
我々は、機能の間に宛先距離を持っていた。

22
00:01:22.430 --> 00:01:28.140
それは彼が予約をクリックした実際のホテル
にユーザーの都市からの距離です。

23
00:01:28.140 --> 00:01:29.815
さっき言ったように

24
00:01:29.815 --> 00:01:34.025
私たちの予測目標は、実際のホテルの特徴で
す。

25
00:01:34.025 --> 00:01:36.840
さらに、デスティネーションの距離は

26
00:01:36.840 --> 00:01:41.845
非常に正確なので、ユニークなユーザーの都
市と宛先の距離のペア

27
00:01:41.845 --> 00:01:44.695
ユニークなホテルに対応。

28
00:01:44.695 --> 00:01:47.455
2と2を一緒に入れて、

29
00:01:47.455 --> 00:01:54.305
我々は、ターゲットへのプロキシとしてユー
ザーの都市と宛先の距離のペアを扱うことが
できます。

30
00:01:54.305 --> 00:01:59.995
このセットでは、列車セットに既に存在する
ようなペアに遭遇したとき、

31
00:01:59.995 --> 00:02:03.745
我々は、単に我々の予測としてそこからラベ
ルを取ることができる。

32
00:02:03.745 --> 00:02:08.845
それはほぼ両方の列車とテストに存在するペ
アのために完璧に働いた。

33
00:02:08.845 --> 00:02:15.935
しかし、テストセットのほぼ半分は、列車セ
ットからのマッチなしで新しいペアから成っ
ていた。

34
00:02:15.935 --> 00:02:18.145
このように我々は深く行く必要があった。

35
00:02:18.145 --> 00:02:21.425
しかし、どのように正確に我々のソリューシ
ョンを改善することができますか?

36
00:02:21.425 --> 00:02:24.165
まあ、2つの方法があります。

37
00:02:24.165 --> 00:02:27.560
まず、1つの現在の機能を作成することです

38
00:02:27.560 --> 00:02:32.495
corteges は、ユーザーの都市と宛
先の距離のペアに似ています。

39
00:02:32.495 --> 00:02:38.620
たとえば、ユーザーの都市のためにどのグル
ープがあるかのように多くのホテル、

40
00:02:38.620 --> 00:02:41.540
ホテルの国、ホテルシティトリプレット。

41
00:02:41.540 --> 00:02:46.685
その後、我々はそのような機能にいくつかの
機械学習モデルを訓練することができます。

42
00:02:46.685 --> 00:02:51.295
もう一つの方法は、何とかより多くのマッチ
を見つけることです。

43
00:02:51.295 --> 00:02:58.320
その目的のために、我々は、ユーザーの都市
とホテルの都市の真の座標を見つける必要が
あります。

44
00:02:58.320 --> 00:03:02.055
それから、先の距離機能だったと推測して、

45
00:03:02.055 --> 00:03:08.130
それは実際のホテルの座標のためのよい近似
を見つけることは可能だった。

46
00:03:08.130 --> 00:03:10.275
やり方を調べてみましょう。

47
00:03:10.275 --> 00:03:15.770
まず、距離の計算方法を理解する必要があり
ます。

48
00:03:15.770 --> 00:03:22.865
ここでは、地理的座標を使用して、距離が測
地線になるようにします。

49
00:03:22.865 --> 00:03:26.015
それは半正矢関数式を介して行われ、

50
00:03:26.015 --> 00:03:28.224
楽しいものではありません。

51
00:03:28.224 --> 00:03:32.565
今、我々は真の座標を知っていると仮定

52
00:03:32.565 --> 00:03:39.620
それぞれに未知の座標を持つ4点目からの3
点と距離、

53
00:03:39.620 --> 00:03:42.740
3つの方程式のシステムを書き留めておくと
、

54
00:03:42.740 --> 00:03:44.540
距離ごとに1つ、

55
00:03:44.540 --> 00:03:50.320
我々は明確にそれを解決し、4番目のポイン
トのための真の座標を得ることができます。

56
00:03:50.320 --> 00:03:54.692
座標は4点

57
00:03:54.692 --> 00:03:56.525
私はあなたのアイデアを得ると思います。

58
00:03:56.525 --> 00:04:00.205
最初はフックとかペテン師とか

59
00:04:00.205 --> 00:04:04.325
我々は3大都市の真の座標をリバースエンジ
ニアリングします。

60
00:04:04.325 --> 00:04:09.855
その後、我々は繰り返し、より多くの都市の
座標を見つけることができます。

61
00:04:09.855 --> 00:04:12.010
でも、写真からわかるように、

62
00:04:12.010 --> 00:04:15.080
いくつかの都市は、海に終わった。

63
00:04:15.080 --> 00:04:18.820
我々のアルゴリズムは正確ではないというこ
とだ

64
00:04:18.820 --> 00:04:25.790
すべてのイテレーションの後に丸めエラーが
蓄積され、すべてがバラバラになり始めます
。

65
00:04:25.790 --> 00:04:30.220
私達はある異なった方法を得、実際に私達は
よりよくすることができる。

66
00:04:30.220 --> 00:04:33.555
ちょうど前のものとこの写真を比較する。

67
00:04:33.555 --> 00:04:36.510
それは明らかにはるかに正確です。

68
00:04:36.510 --> 00:04:39.910
どのように反復的な方法で我々はシステムを
解決覚えて

69
00:04:39.910 --> 00:04:45.605
座標または4番目の未知の点を明確に見つけ
る3つの式。

70
00:04:45.605 --> 00:04:48.865
しかし、なぜ3つの方程式で自分自身を制限
?

71
00:04:48.865 --> 00:04:51.790
からの方程式の巨大なシステムを作成してみ
ましょう

72
00:04:51.790 --> 00:04:57.290
すべての既知の距離は、変数に対して真の座
標で行われます。

73
00:04:57.290 --> 00:05:03.120
我々は、文字通り数百または数千の方程式と
数万で終わる

74
00:05:03.120 --> 00:05:05.120
未知の変数の。

75
00:05:05.120 --> 00:05:07.415
良いことは非常に疎です。

76
00:05:07.415 --> 00:05:13.210
このようなシステムを効率的に解決するため
に、SciPy
から特殊な方法を適用することができます。

77
00:05:13.210 --> 00:05:17.685
最後に、方程式のそのシステムを解決した後
、

78
00:05:17.685 --> 00:05:24.960
我々は、両方のホテルの都市とユーザーの都
市のための非常に正確な座標で終わる。

79
00:05:24.960 --> 00:05:26.190
しかし、あなたが覚えているように、

80
00:05:26.190 --> 00:05:29.235
ホテルのタイプを予測してる

81
00:05:29.235 --> 00:05:32.960
都市座標と目的地の距離を使用して、

82
00:05:32.960 --> 00:05:38.525
実際のホテルの本当の座標の近似を見つける
ことは可能である。

83
00:05:38.525 --> 00:05:42.175
我々は、ユーザーの都市を修正し、円周を描
画するとき

84
00:05:42.175 --> 00:05:46.185
先の距離の半径とその周りに、

85
00:05:46.185 --> 00:05:52.795
それは本当のホテルの場所は、周囲のどこか
にする必要があります明らかだ。

86
00:05:52.795 --> 00:05:58.895
さて、いくつかのホテルの都市を修正し、そ
のような円周から描くことができます

87
00:05:58.895 --> 00:06:00.410
すべてのユーザーが都市

88
00:06:00.410 --> 00:06:06.505
それ固定ホテル都市そしてすべての与えられ
た行先の間隔のためのそれらを引く。

89
00:06:06.505 --> 00:06:12.260
その後、私たちはスライド上のもののような
写真で終わる。

90
00:06:12.260 --> 00:06:18.215
都市はホテルの限られた数を含んでいる従っ
て直観はここにあるホテル

91
00:06:18.215 --> 00:06:21.765
実際には交差点にある

92
00:06:21.765 --> 00:06:25.760
このような点で円周が交差するほど、

93
00:06:25.760 --> 00:06:30.335
ホテルがその地点にいる確率が高くなります
。

94
00:06:30.335 --> 00:06:35.470
あなたが見ることができるように、写真は美
しいですが、かなり厄介です。

95
00:06:35.470 --> 00:06:39.860
特異点の面での操作は不可能です。

96
00:06:39.860 --> 00:06:46.895
しかし、ポイントの明示的なクラスタがあり
、この情報を使用することができます。

97
00:06:46.895 --> 00:06:50.700
我々は統合のいくつかの種類を行うことがで
きます。

98
00:06:50.700 --> 00:06:55.670
すべての都市について、その中心の周りにグ
リッドを作成してみましょう。

99
00:06:55.670 --> 00:07:02.480
10キロのような何か100メートルのステ
ップサイズの10キロメートル。

100
00:07:02.480 --> 00:07:05.465
さて、トレーニングデータを使って、

101
00:07:05.465 --> 00:07:07.700
グリッド内のすべてのセルに対して、

102
00:07:07.700 --> 00:07:12.835
どのように多くのホテルが存在しているカウ
ントすることができます。

103
00:07:12.835 --> 00:07:15.845
周囲がセルを通過する場合は、

104
00:07:15.845 --> 00:07:20.705
その周辺に対応したホテルタイプにプラスワ
ンを差し上げます。

105
00:07:20.705 --> 00:07:27.735
推論の間に、我々はまた、ターゲットの距離
の機能に基づいて円周を描画します。

106
00:07:27.735 --> 00:07:33.020
私たちはどの程度の細胞を介して行って、情
報を使用して参照してください

107
00:07:33.020 --> 00:07:37.950
これらのセルからすべてのカウンタの合計の
ような機能を作成するには、

108
00:07:37.950 --> 00:07:39.430
すべてのカウンタの平均、

109
00:07:39.430 --> 00:07:42.995
すべてのカウンターの最大数など。

110
00:07:42.995 --> 00:07:48.220
すごい。我々は、機能工学の一部をカバーし
ている。

111
00:07:48.220 --> 00:07:51.640
すべての機能が直接ターゲットラベルを使用
することに注意してください。

112
00:07:51.640 --> 00:07:56.795
我々は訓練のようにそれらを使用することは
できません。

113
00:07:56.795 --> 00:08:01.005
我々は、列車のデータのためのアウトフォー
ルドのファッションでそれらを生成する必要
があります。

114
00:08:01.005 --> 00:08:07.865
だから我々は年間2013と2014のトレ
ーニングデータを持っていた。

115
00:08:07.865 --> 00:08:11.365
年2014の機能を生成するには、

116
00:08:11.365 --> 00:08:16.935
我々は、2013年からのラベルデータを使
用し、その逆、

117
00:08:16.935 --> 00:08:22.785
年2014を使用して、2013年の機能を
生成しました。

118
00:08:22.785 --> 00:08:25.355
テスト機能については、

119
00:08:25.355 --> 00:08:28.360
2015年から

120
00:08:28.360 --> 00:08:31.590
私たちは自然にすべてのトレーニングデータ
を使用。

121
00:08:31.590 --> 00:08:39.070
最後に、我々は多くの機能を計算し、Xgb
oost
モデルにそれらを提供しています。

122
00:08:39.070 --> 00:08:42.555
コースのためのトレーニングの16時間後、

123
00:08:42.555 --> 00:08:44.466
結果が出た

124
00:08:44.466 --> 00:08:49.510
我々は、公共のリーダーボードの上の3番目
の位置になって、プライベートで。

125
00:08:49.510 --> 00:08:54.595
我々は良いでしたが、我々はまだ完全にデー
タ漏洩を悪用していない。

126
00:08:54.595 --> 00:08:56.130
スコアボードを確認すると、

127
00:08:56.130 --> 00:09:00.525
あなたは、最初の場所と残りの間のスコアの
違いに気づくでしょう。

128
00:09:00.525 --> 00:09:04.995
投機の下で、勝者は尋常ではなかった。

129
00:09:04.995 --> 00:09:09.950
しかし、一般的に、彼の方法は非常に私たち
に似ていた。

130
00:09:09.950 --> 00:09:13.675
彼はより多くの信号の方法を抽出することが
できた。

131
00:09:13.675 --> 00:09:18.190
最後に、私はあなたが私の話を楽しんでほし
い。

132
00:09:18.190 --> 00:09:20.740
あなたが見ることができるように、時には作
業

133
00:09:20.740 --> 00:09:24.285
データ漏洩は非常に興味深いと挑戦すること
ができます。

134
00:09:24.285 --> 00:09:28.865
いくつかの異常なスキルを開発し、視野を広
げることができます。

135
00:09:28.865 --> 00:09:31.410
ご注意をありがとうございました。

