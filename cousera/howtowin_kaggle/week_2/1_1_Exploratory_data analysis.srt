1
00:00:00.000 --> 00:00:03.866
音楽

2
00:00:03.866 --> 00:00:06.743
こんにちは、このレッスンでは、我々は非常
に話をする

3
00:00:06.743 --> 00:00:11.910
最初のステップは、良いデータサイエンティ
ストは、彼が新しいデータセットを与えられ
たときにかかります。

4
00:00:11.910 --> 00:00:15.767
主に、探索的データ分析や EDA
の短い。

5
00:00:15.767 --> 00:00:20.280
このレッスンの最後に、あなたが知っている
、何から最も重要なものです

6
00:00:20.280 --> 00:00:24.850
データの理解と探求我々はに注意を払う必要
があります。

7
00:00:24.850 --> 00:00:27.580
この知識は良いモデルを構築するために必要
であり、

8
00:00:27.580 --> 00:00:29.808
リーダーボード上の高い場所を実現します。

9
00:00:29.808 --> 00:00:35.400
まず、探索的データ分析とは何か、なぜ必要
なのかについて説明します。

10
00:00:35.400 --> 00:00:39.150
我々は、EDA
プロセスの重要な部分を通過し、

11
00:00:39.150 --> 00:00:42.190
EDA
で発見できることの例を参照してください。

12
00:00:43.590 --> 00:00:47.682
次に、探査を実行する必要があるツールにつ
いて見ていきます。

13
00:00:47.682 --> 00:00:50.506
どのようなプロットを描画し、どのような機
能をパンダから

14
00:00:50.506 --> 00:00:53.820
matplotlib ライブラリは、私た
ちの役に立つことができます。

15
00:00:53.820 --> 00:00:57.840
また、非常に基本的なデータセットのクリー
ニングプロセスについて簡単に説明します。

16
00:00:57.840 --> 00:01:01.570
データを探索しながら実行すると便利です。

17
00:01:01.570 --> 00:01:04.460
そして最後に、我々は探査プロセスを通過し
ます

18
00:01:04.460 --> 00:01:07.300
スプリングリーフの競争は Kaggle
にいくつかの時間前に開催された。

19
00:01:08.460 --> 00:01:12.000
このビデオでは、探索的データ分析の話を始
めます。

20
00:01:13.430 --> 00:01:15.890
探索的データ分析とは

21
00:01:15.890 --> 00:01:19.550
それは基本的にデータを調べるプロセスであ
り、それを理解し、

22
00:01:19.550 --> 00:01:20.600
それで快適になって。

23
00:01:21.780 --> 00:01:25.874
作業を快適に、おそらく、常にあなたが最初
のものを取得します。

24
00:01:25.874 --> 00:01:28.828
問題を解決するには、問題を理解する必要が
あります。

25
00:01:28.828 --> 00:01:31.820
そして、あなたがそれを解決するために与え
られているかを知るために。

26
00:01:31.820 --> 00:01:35.600
データ科学では、完全なデータの理解は、生
成するために必要です

27
00:01:35.600 --> 00:01:39.160
強力な機能と高精度のモデルを構築します。

28
00:01:39.160 --> 00:01:43.535
実際には、データを探索しながら、それにつ
いて直感を構築します。

29
00:01:43.535 --> 00:01:45.624
データが直感的に

30
00:01:45.624 --> 00:01:48.856
可能な新機能についての仮説を生成すること
ができます

31
00:01:48.856 --> 00:01:53.250
最終的には、より良いスコアにつながること
ができるデータのいくつかの洞察力を見つけ
る。

32
00:01:53.250 --> 00:01:58.080
このレッスンの後半では、EDA
によって提供される例を示します。

33
00:01:59.302 --> 00:02:02.900
まあ、1つは別の方法で行くことがあると主
張することがあります。

34
00:02:02.900 --> 00:02:05.140
ハードドライブからデータを読んで、決して
それを見て、

35
00:02:05.140 --> 00:02:09.270
すぐに分類子にフィードします。彼らは、い
くつかの非常に高度なモデリング技術を使用
する

36
00:02:09.270 --> 00:02:14.980
ミキシング、スタッキングのように、最終的
には、スコアボード上のかなり良いスコアを
取得します。

37
00:02:14.980 --> 00:02:17.190
このアプローチは時々動作しますが、

38
00:02:17.190 --> 00:02:21.070
それは非常に上の位置に連れて行くことがで
きないし、勝たせる。

39
00:02:21.070 --> 00:02:24.320
トップソリューションは、常に先進的かつ積
極的なモデリングを使用します。

40
00:02:24.320 --> 00:02:27.170
しかし、通常、彼らはそれ以上のものがあり
ます。

41
00:02:27.170 --> 00:02:30.040
彼らはデータから洞察力を取り入れ、

42
00:02:30.040 --> 00:02:32.850
それらの洞察を見つけるために、彼らは注意
深い江田をしました。

43
00:02:34.130 --> 00:02:38.150
我々はあなたが行うことができますすべての
生の計算を認める必要があるが

44
00:02:38.150 --> 00:02:41.400
モデリングと EDA は、より良いモデル
を構築するのに役立ちません。

45
00:02:41.400 --> 00:02:44.280
通常、データが匿名の場合ですが、

46
00:02:44.280 --> 00:02:48.006
暗号化、事前処理、難読化。

47
00:02:48.006 --> 00:02:53.390
しかし、それはどのような方法は、このケー
スであることを実現するために EDA
を実行する必要があります見て

48
00:02:53.390 --> 00:02:57.000
あなたはより良いモデリングに多くの時間を
費やすとサーバーは、1ヶ月間ビジー状態に
する。

49
00:02:58.080 --> 00:03:02.080
主な EDA
ツールの1つは、視覚化です。

50
00:03:02.080 --> 00:03:05.160
データを視覚化すると、すぐにパターンが表
示されます。

51
00:03:05.160 --> 00:03:09.110
そして、これで、自分自身に尋ねると、それ
らのパターンは何ですか?

52
00:03:09.110 --> 00:03:10.080
なぜ見える?

53
00:03:10.080 --> 00:03:13.395
そして最後に、どのように我々はより良いモ
デルを構築するためにそれらのパターンを使
用するのですか?

54
00:03:13.395 --> 00:03:17.130
また、別の方法で回避することができます。

55
00:03:17.130 --> 00:03:20.830
たぶん我々は、データについては、特定の仮
説を思い付く。

56
00:03:20.830 --> 00:03:21.390
どうしようか。

57
00:03:21.390 --> 00:03:23.900
視覚化を行うことでテストします。

58
00:03:24.920 --> 00:03:26.690
次の動画の1つで、

59
00:03:26.690 --> 00:03:30.380
探査に使用できる主な視覚化ツールについて
お話しします。

60
00:03:31.550 --> 00:03:35.559
ただやる気の例として、コンクールについて
お伝えしたいのですが、

61
00:03:35.559 --> 00:03:40.420
アレクサンダー
D'yakonov、Kagel で元トッ
プ1つのいくつかの時間前に参加した。

62
00:03:40.420 --> 00:03:44.780
この競争についての興味深いことは、あなた
が必要としないことです。

63
00:03:44.780 --> 00:03:49.990
データをよく理解していれば、モデリングを
行うことができます。

64
00:03:49.990 --> 00:03:52.820
その競争の中で、客観的に予測することだっ
た

65
00:03:52.820 --> 00:03:56.670
人は、同社が彼を提供していますプロモーシ
ョンを使用するかどうか。

66
00:03:56.670 --> 00:04:02.200
従って各役割は人によって受け取られる特定
のプロモに対応する。

67
00:04:02.200 --> 00:04:04.430
人を記述する機能があります, のために

68
00:04:04.430 --> 00:04:09.400
彼の年齢、性別、彼は結婚しているかどうか
などの例。

69
00:04:09.400 --> 00:04:14.420
そして、プロモーションを記述する機能があ
ります, ターゲットは0または

70
00:04:14.420 --> 00:04:16.760
1、彼はプロモかどうかを使用します。

71
00:04:17.800 --> 00:04:21.390
しかし、すべての機能の中で2つの特に興味
深いがあった。

72
00:04:21.390 --> 00:04:26.540
最初の1つは、プロモーションの数は、前に
人によって送信されます。

73
00:04:26.540 --> 00:04:29.800
そして、2番目の人の前に使用していたプロ
モーションの数です。

74
00:04:30.900 --> 00:04:34.850
それでは、特定のユーザーを取りましょう,
インデックスと言う 13,

75
00:04:34.850 --> 00:04:38.790
とプロモーション送信列の数で行を並べ替え
る。

76
00:04:39.850 --> 00:04:43.210
そして今のコラムでの違いを見てみましょう

77
00:04:43.210 --> 00:04:46.850
2つの連続する行間の使用されるプロモーシ
ョンの数。

78
00:04:46.850 --> 00:04:48.650
ここでは diff 列に書かれています。

79
00:04:49.670 --> 00:04:54.090
と見て、ほとんどの場合、diff
列の値は、ターゲット値と等しくなります。

80
00:04:55.330 --> 00:04:56.900
そして、実際には、魔法はありません。

81
00:04:56.900 --> 00:04:59.550
ただ列の意味を考えてみてください。

82
00:04:59.550 --> 00:05:04.560
たとえば、2番目の行は、人がすでに1つの
プロモーションを使用して参照してください

83
00:05:04.560 --> 00:05:06.900
彼はその時間前に1つだけ送られた。

84
00:05:06.900 --> 00:05:11.010
我々は彼が最初のプロモーションを使用し、
したがって我々は答えを持っていることを知
っている理由であり、

85
00:05:11.010 --> 00:05:11.710
最初の行。

86
00:05:12.780 --> 00:05:17.568
一般的には、現在のプロモーションの前に、
人は n のプロモーションを使用し、

87
00:05:17.568 --> 00:05:20.088
彼はそれを使用する次のプロモーションの前
に、

88
00:05:20.088 --> 00:05:25.722
我々は、彼が使用することを知っている n
+ 1 プロモーションして我々は、彼が現
在のプロモーションを使用して実現.

89
00:05:25.722 --> 00:05:27.980
そして、その答えは1です。

90
00:05:27.980 --> 00:05:30.710
我々は彼が次のプロモーションの前に n 
のプロモーションを使用していることを知っ
ていれば、

91
00:05:30.710 --> 00:05:32.860
正確には、現在のプロモーションの前に、

92
00:05:32.860 --> 00:05:37.680
その後、明らかに彼は現在のプロモーション
を使用していないと答えは0です。

93
00:05:37.680 --> 00:05:42.020
まあ、それは最後の行に何をすべきか明確で
はない

94
00:05:42.020 --> 00:05:46.360
すべてのユーザー、または我々は行が欠落し
ているが、ポイントを参照してください。

95
00:05:46.360 --> 00:05:51.210
我々は、分類子を実行していない、と我々は
すでに 80% の精度を持っている。

96
00:05:51.210 --> 00:05:56.130
これは、EDA を実行せず、データを調べ
ていない場合には不可能です。

97
00:05:57.720 --> 00:06:01.290
また、発言として、私は提示された方法が動
作すると言う必要があります

98
00:06:01.290 --> 00:06:06.620
データの準備中に主催者によって行われたミ
スのため。

99
00:06:06.620 --> 00:06:08.750
これらのミスはリークと呼ばれ、

100
00:06:08.750 --> 00:06:12.520
大会では、通常、それらを悪用することがで
きます。

101
00:06:12.520 --> 00:06:15.540
これらの例については、このコースで後述し
ます。

102
00:06:16.590 --> 00:06:21.770
そこでこのビデオでは、EDA
を実行する主な理由について説明しました。

103
00:06:21.770 --> 00:06:26.520
これは、データを快適に取得し、魔法の機能
の洞察を見つけることです。

104
00:06:28.010 --> 00:06:30.140
我々はまた、例を見た江田と

105
00:06:30.140 --> 00:06:32.970
データの理解は、より良いスコアを得るため
に重要だった。

106
00:06:34.110 --> 00:06:36.156
そして最後に、奪うべきポイント。

107
00:06:36.156 --> 00:06:40.324
あなたが競争を開始すると、より良い
EDA を開始し、

108
00:06:40.324 --> 00:06:42.420
筋金入りのモデリングではない。

109
00:06:43.665 --> 00:06:46.005
このレッスンでは、多くのことを話し合う必
要がありました。

110
00:06:46.005 --> 00:06:48.463
だから letツエs
次のビデオに移動します。

111
00:06:48.463 --> 00:06:58.463
音楽

